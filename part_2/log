[2019-04-26 18:44:53.661734] !!! ERROR !!!
[2019-04-26 18:44:53.662267]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:44:53.695225] !!! ERROR !!!
[2019-04-26 18:44:53.695394]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:45:53.821647] !!! ERROR !!!
[2019-04-26 18:45:53.821925]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:45:53.859408] !!! ERROR !!!
[2019-04-26 18:45:53.859595]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:51:13.109289] !!! ERROR !!!
[2019-04-26 18:51:13.109491]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:51:13.141180] !!! ERROR !!!
[2019-04-26 18:51:13.141376]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:51:37.997955] !!! ERROR !!!
[2019-04-26 18:51:37.998211]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:51:38.036223] !!! ERROR !!!
[2019-04-26 18:51:38.036507]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:55:30.105293] !!! ERROR !!!
[2019-04-26 18:55:30.105510]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:55:30.141826] !!! ERROR !!!
[2019-04-26 18:55:30.142004]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:55:58.580796] !!! ERROR !!!
[2019-04-26 18:55:58.580981]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:55:58.613463] !!! ERROR !!!
[2019-04-26 18:55:58.613624]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:56:58.798334] !!! ERROR !!!
[2019-04-26 18:56:58.798831]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:56:58.830132] !!! ERROR !!!
[2019-04-26 18:56:58.830315]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:57:32.593735] !!! ERROR !!!
[2019-04-26 18:57:32.593992]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:57:32.631990] !!! ERROR !!!
[2019-04-26 18:57:32.632249]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:57:49.576494] !!! ERROR !!!
[2019-04-26 18:57:49.576777]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:57:49.617514] !!! ERROR !!!
[2019-04-26 18:57:49.617758]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:58:18.024793] !!! ERROR !!!
[2019-04-26 18:58:18.024941]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:58:18.056789] !!! ERROR !!!
[2019-04-26 18:58:18.056955]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:59:04.054953] !!! ERROR !!!
[2019-04-26 18:59:04.055210]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:59:04.086364] !!! ERROR !!!
[2019-04-26 18:59:04.086552]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:59:48.978969] !!! ERROR !!!
[2019-04-26 18:59:48.979612]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 18:59:49.011082] !!! ERROR !!!
[2019-04-26 18:59:49.011265]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:00:32.533590] !!! ERROR !!!
[2019-04-26 19:00:32.533795]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:00:32.571206] !!! ERROR !!!
[2019-04-26 19:00:32.571403]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:00:56.642367] !!! ERROR !!!
[2019-04-26 19:00:56.642538]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:00:56.681438] !!! ERROR !!!
[2019-04-26 19:00:56.681590]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:24.116489] !!! ERROR !!!
[2019-04-26 19:01:24.116687]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:24.157725] !!! ERROR !!!
[2019-04-26 19:01:24.157899]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:28.195945] !!! ERROR !!!
[2019-04-26 19:01:28.196124]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:28.232544] !!! ERROR !!!
[2019-04-26 19:01:28.232846]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:54.174424] !!! ERROR !!!
[2019-04-26 19:01:54.174657]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:01:54.213654] !!! ERROR !!!
[2019-04-26 19:01:54.213847]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:02:08.891235] !!! ERROR !!!
[2019-04-26 19:02:08.891439]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:02:08.934073] !!! ERROR !!!
[2019-04-26 19:02:08.934339]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:02:25.627600] !!! ERROR !!!
[2019-04-26 19:02:25.627895]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:02:25.664655] !!! ERROR !!!
[2019-04-26 19:02:25.664910]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:03:09.479375] !!! ERROR !!!
[2019-04-26 19:03:09.479658]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:03:09.513571] !!! ERROR !!!
[2019-04-26 19:03:09.513818]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:05:34.763305] !!! ERROR !!!
[2019-04-26 19:05:34.763602]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:05:34.795796] !!! ERROR !!!
[2019-04-26 19:05:34.796017]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:06:09.794980] !!! ERROR !!!
[2019-04-26 19:06:09.795220]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:06:09.826711] !!! ERROR !!!
[2019-04-26 19:06:09.826890]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:11:12.109464] !!! ERROR !!!
[2019-04-26 19:11:12.109716]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:11:12.152666] !!! ERROR !!!
[2019-04-26 19:11:12.152867]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:20:10.849016] !!! ERROR !!!
[2019-04-26 19:20:10.849549]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:20:10.880545] !!! ERROR !!!
[2019-04-26 19:20:10.880747]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:47:28.527598] !!! ERROR !!!
[2019-04-26 19:47:28.527792]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:47:28.571879] !!! ERROR !!!
[2019-04-26 19:47:28.572085]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:47:56.438588] !!! ERROR !!!
[2019-04-26 19:47:56.438821]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:47:56.481319] !!! ERROR !!!
[2019-04-26 19:47:56.481509]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:31.995530] !!! ERROR !!!
[2019-04-26 19:48:31.995768]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:32.031165] !!! ERROR !!!
[2019-04-26 19:48:32.031372]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:47.252164] !!! ERROR !!!
[2019-04-26 19:48:47.252375]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:47.284625] !!! ERROR !!!
[2019-04-26 19:48:47.284847]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:55.431682] !!! ERROR !!!
[2019-04-26 19:48:55.431858]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:48:55.470353] !!! ERROR !!!
[2019-04-26 19:48:55.470528]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:49:45.590352] !!! ERROR !!!
[2019-04-26 19:49:45.590569]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:49:45.626703] !!! ERROR !!!
[2019-04-26 19:49:45.626933]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:02.495632] !!! ERROR !!!
[2019-04-26 19:51:02.495848]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:02.530859] !!! ERROR !!!
[2019-04-26 19:51:02.531068]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:34.618123] !!! ERROR !!!
[2019-04-26 19:51:34.618432]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:34.658953] !!! ERROR !!!
[2019-04-26 19:51:34.659143]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:44.042915] !!! ERROR !!!
[2019-04-26 19:51:44.043122]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:51:44.074427] !!! ERROR !!!
[2019-04-26 19:51:44.074637]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 19:55:54.213207] !!! ERROR !!!
[2019-04-26 19:55:54.214139] b'  File "./decode", line 11\n    print decode(sys.argv[1], has_breakpoint)\n                                            ^\nIndentationError: unindent does not match any outer indentation level\n'
[2019-04-26 19:55:54.253337] !!! ERROR !!!
[2019-04-26 19:55:54.254482] b'  File "./decode", line 11\n    print decode(sys.argv[1], has_breakpoint)\n                                            ^\nIndentationError: unindent does not match any outer indentation level\n'
[2019-04-26 20:11:49.831543] !!! ERROR !!!
[2019-04-26 20:11:49.832692] b'  File "./decode", line 11\n    print decode(sys.argv[1], has_breakpoint)\n                                            ^\nIndentationError: unindent does not match any outer indentation level\n'
[2019-04-26 20:11:49.869426] !!! ERROR !!!
[2019-04-26 20:11:49.870379] b'  File "./decode", line 11\n    print decode(sys.argv[1], has_breakpoint)\n                                            ^\nIndentationError: unindent does not match any outer indentation level\n'
[2019-04-26 20:19:49.786238] !!! ERROR !!!
[2019-04-26 20:19:49.786452]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:19:49.818830] !!! ERROR !!!
[2019-04-26 20:19:49.818990]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:25:29.306501] !!! ERROR !!!
[2019-04-26 20:25:29.306705]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:25:29.345802] !!! ERROR !!!
[2019-04-26 20:25:29.346045]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:27:15.753209] !!! ERROR !!!
[2019-04-26 20:27:15.753382]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:27:15.789326] !!! ERROR !!!
[2019-04-26 20:27:15.789535]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:28:30.913099] !!! ERROR !!!
[2019-04-26 20:28:30.913289]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:28:30.952007] !!! ERROR !!!
[2019-04-26 20:28:30.952262]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:30:15.697567] !!! ERROR !!!
[2019-04-26 20:30:15.697841]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:30:15.740884] !!! ERROR !!!
[2019-04-26 20:30:15.741135]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:31:54.389194] !!! ERROR !!!
[2019-04-26 20:31:54.389414]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:31:54.423659] !!! ERROR !!!
[2019-04-26 20:31:54.423844]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:34:56.510340] !!! ERROR !!!
[2019-04-26 20:34:56.510520]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:34:56.557491] !!! ERROR !!!
[2019-04-26 20:34:56.557751]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:44:08.006576] !!! ERROR !!!
[2019-04-26 20:44:08.006919]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:44:08.039842] !!! ERROR !!!
[2019-04-26 20:44:08.040076]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:47:50.315257] !!! ERROR !!!
[2019-04-26 20:47:50.315581]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:47:50.351967] !!! ERROR !!!
[2019-04-26 20:47:50.352269]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:51:58.287804] !!! ERROR !!!
[2019-04-26 20:51:58.288337]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:51:58.331698] !!! ERROR !!!
[2019-04-26 20:51:58.331909]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:54:23.647257] !!! ERROR !!!
[2019-04-26 20:54:23.647661]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:54:23.698358] !!! ERROR !!!
[2019-04-26 20:54:23.698587]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:55:39.867005] !!! ERROR !!!
[2019-04-26 20:55:39.867176]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:55:39.906250] !!! ERROR !!!
[2019-04-26 20:55:39.906578]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:55:51.981855] !!! ERROR !!!
[2019-04-26 20:55:51.982149]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:55:52.015687] !!! ERROR !!!
[2019-04-26 20:55:52.015972]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:56:38.444187] !!! ERROR !!!
[2019-04-26 20:56:38.444540]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:56:38.477004] !!! ERROR !!!
[2019-04-26 20:56:38.477269]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:57:27.578999] !!! ERROR !!!
[2019-04-26 20:57:27.579376]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:57:27.620771] !!! ERROR !!!
[2019-04-26 20:57:27.621201]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:59:46.523458] !!! ERROR !!!
[2019-04-26 20:59:46.523869]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 20:59:46.557779] !!! ERROR !!!
[2019-04-26 20:59:46.558036]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 21:01:04.907827] !!! ERROR !!!
[2019-04-26 21:01:04.908011]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 21:01:04.948932] !!! ERROR !!!
[2019-04-26 21:01:04.949117]   File "./decode", line 11
    print decode(sys.argv[1], has_breakpoint)
                                            ^
IndentationError: unindent does not match any outer indentation level

[2019-04-26 21:04:35.715387] !!! ERROR !!!
[2019-04-26 21:04:35.716011] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:04:35.872468] !!! ERROR !!!
[2019-04-26 21:04:35.872648] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:04:52.561286] !!! ERROR !!!
[2019-04-26 21:04:52.561852] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:04:52.696592] !!! ERROR !!!
[2019-04-26 21:04:52.696803] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:06:56.506628] !!! ERROR !!!
[2019-04-26 21:06:56.506865] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:06:56.646859] !!! ERROR !!!
[2019-04-26 21:06:56.647069] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:08:13.606432] !!! ERROR !!!
[2019-04-26 21:08:13.606652] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:08:13.729694] !!! ERROR !!!
[2019-04-26 21:08:13.729921] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:09:41.400360] !!! ERROR !!!
[2019-04-26 21:09:41.400677] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:09:41.519032] !!! ERROR !!!
[2019-04-26 21:09:41.519304] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:11:04.268694] !!! ERROR !!!
[2019-04-26 21:11:04.268951] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 2, in <module>
    from util.py import *
ImportError: No module named py

[2019-04-26 21:11:04.386164] !!! ERROR !!!
[2019-04-26 21:11:04.386434] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 2, in <module>
    from util.py import *
ImportError: No module named py

[2019-04-26 21:11:13.631191] !!! ERROR !!!
[2019-04-26 21:11:13.631427] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:11:13.751219] !!! ERROR !!!
[2019-04-26 21:11:13.760294] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:11:38.011875] !!! ERROR !!!
[2019-04-26 21:11:38.012116] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = util._read_csv("data", "alphabet")[0]
NameError: global name 'util' is not defined

[2019-04-26 21:11:38.141118] !!! ERROR !!!
[2019-04-26 21:11:38.141367] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = util._read_csv("data", "alphabet")[0]
NameError: global name 'util' is not defined

[2019-04-26 21:12:35.263871] !!! ERROR !!!
[2019-04-26 21:12:35.264248] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 2, in <module>
    from __util__ import *
ImportError: No module named __util__

[2019-04-26 21:12:35.406610] !!! ERROR !!!
[2019-04-26 21:12:35.406850] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 2, in <module>
    from __util__ import *
ImportError: No module named __util__

[2019-04-26 21:13:09.184367] !!! ERROR !!!
[2019-04-26 21:13:09.184563] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = util._read_csv("data", "alphabet")[0]
NameError: global name 'util' is not defined

[2019-04-26 21:13:09.309100] !!! ERROR !!!
[2019-04-26 21:13:09.309294] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = util._read_csv("data", "alphabet")[0]
NameError: global name 'util' is not defined

[2019-04-26 21:15:58.553574] !!! ERROR !!!
[2019-04-26 21:15:58.554260] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:15:58.679571] !!! ERROR !!!
[2019-04-26 21:15:58.679798] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:16:33.022979] !!! ERROR !!!
[2019-04-26 21:16:33.023626] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:16:33.147779] !!! ERROR !!!
[2019-04-26 21:16:33.148021] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")[0]
NameError: global name '_read_csv' is not defined

[2019-04-26 21:16:49.778510] !!! ERROR !!!
[2019-04-26 21:16:49.778881] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")
NameError: global name '_read_csv' is not defined

[2019-04-26 21:16:49.899483] !!! ERROR !!!
[2019-04-26 21:16:49.899723] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")
NameError: global name '_read_csv' is not defined

[2019-04-26 21:19:11.973500] !!! ERROR !!!
[2019-04-26 21:19:11.974658] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")
NameError: global name '_read_csv' is not defined

[2019-04-26 21:19:12.096458] !!! ERROR !!!
[2019-04-26 21:19:12.096725] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = _read_csv("data", "alphabet")
NameError: global name '_read_csv' is not defined

[2019-04-26 21:19:45.896298] !!! ERROR !!!
[2019-04-26 21:19:45.897000] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 23, in decode
    textvector = to_index(ciphertext)
NameError: global name 'to_index' is not defined

[2019-04-26 21:19:46.099151] !!! ERROR !!!
[2019-04-26 21:19:46.099375] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 23, in decode
    textvector = to_index(ciphertext)
NameError: global name 'to_index' is not defined

[2019-04-26 21:20:04.214353] !!! ERROR !!!
[2019-04-26 21:20:04.214733] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 47, in count_matrix
    matrix[textvector[j+1], textvector[j]] += 1
IndexError: index 8 is out of bounds for axis 0 with size 1

[2019-04-26 21:20:04.353839] !!! ERROR !!!
[2019-04-26 21:20:04.354033] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 47, in count_matrix
    matrix[textvector[j+1], textvector[j]] += 1
IndexError: index 22 is out of bounds for axis 0 with size 1

[2019-04-26 21:21:14.416517] !!! ERROR !!!
[2019-04-26 21:21:14.416756] [[ 0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 49, in count_matrix
    matrix[textvector[j+1], textvector[j]] += 1
IndexError: index 8 is out of bounds for axis 0 with size 1

[2019-04-26 21:21:14.545632] !!! ERROR !!!
[2019-04-26 21:21:14.545897] [[ 0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 49, in count_matrix
    matrix[textvector[j+1], textvector[j]] += 1
IndexError: index 22 is out of bounds for axis 0 with size 1

[2019-04-26 21:21:39.475957] !!! ERROR !!!
[2019-04-26 21:21:39.476294] [[ 0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 49, in count_matrix
    matrix[textvector[j+1]][textvector[j]] += 1
IndexError: index 8 is out of bounds for axis 0 with size 1

[2019-04-26 21:21:39.605779] !!! ERROR !!!
[2019-04-26 21:21:39.606036] [[ 0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 25, in decode
    ciphermatrix = count_matrix(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 49, in count_matrix
    matrix[textvector[j+1]][textvector[j]] += 1
IndexError: index 22 is out of bounds for axis 0 with size 1

[2019-04-26 21:22:25.004338] !!! ERROR !!!
[2019-04-26 21:22:25.004593] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = math.log(letterp[inverse_permutation[firstindex]])
NameError: global name 'math' is not defined

[2019-04-26 21:22:25.155976] !!! ERROR !!!
[2019-04-26 21:22:25.156234] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = math.log(letterp[inverse_permutation[firstindex]])
NameError: global name 'math' is not defined

[2019-04-26 21:23:09.659927] !!! ERROR !!!
[2019-04-26 21:23:09.660112] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:23:09.805971] !!! ERROR !!!
[2019-04-26 21:23:09.806333] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:25:39.528018] !!! ERROR !!!
[2019-04-26 21:25:39.528255] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
(12, array([  1.,   6.,  18.,  14.,   2.,   3.,  12.,  19.,   0.,   9.,  10.,
        21.,  23.,  20.,  17.,   5.,   7.,  16.,  25.,  15.,  26.,  11.,
        24.,  27.,  22.,   4.,  13.,   8.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 117, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:25:39.672550] !!! ERROR !!!
[2019-04-26 21:25:39.672788] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
(13, array([ 25.,  15.,   6.,  21.,  19.,   3.,  11.,   8.,  23.,  16.,   5.,
        26.,  12.,  13.,  18.,   0.,   2.,  22.,  27.,  24.,   4.,   1.,
         7.,  20.,  10.,  17.,   9.,  14.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 117, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:26:41.876880] !!! ERROR !!!
[2019-04-26 21:26:41.877159] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
(12, array([ 13.,  20.,   5.,   0.,   8.,  25.,   9.,   6.,  16.,  23.,  11.,
        15.,  27.,   7.,  10.,  17.,  19.,  12.,  14.,  21.,   4.,   1.,
        24.,  22.,  26.,   3.,   2.,  18.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 117, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:26:42.020271] !!! ERROR !!!
[2019-04-26 21:26:42.020598] [[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
(13, array([ 23.,  17.,   5.,  12.,  24.,  26.,   8.,  19.,  13.,   6.,   9.,
         1.,  11.,   3.,  14.,  16.,   4.,  18.,  10.,  21.,  15.,  20.,
        25.,  22.,   2.,   0.,  27.,   7.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 81, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 117, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:26:50.442085] !!! ERROR !!!
[2019-04-26 21:26:50.442294] (12, array([ 19.,  26.,  14.,  24.,  27.,   3.,  20.,  23.,   0.,  17.,   6.,
        16.,   5.,   7.,   1.,  18.,   4.,  15.,  12.,   2.,  25.,   9.,
        22.,  10.,  13.,   8.,  21.,  11.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:26:50.576902] !!! ERROR !!!
[2019-04-26 21:26:50.577095] (13, array([ 18.,   5.,  26.,  27.,  21.,  16.,  14.,   8.,   7.,  19.,  15.,
         0.,  17.,  11.,  24.,  23.,  22.,   4.,   1.,  13.,  12.,  10.,
         6.,   9.,   3.,   2.,  25.,  20.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:29:54.982916] !!! ERROR !!!
[2019-04-26 21:29:54.983161] (12, array([  6.,   3.,  11.,  19.,  27.,   2.,  20.,   8.,  17.,  18.,  13.,
         0.,   7.,  24.,  25.,   4.,   1.,  26.,  16.,  14.,  10.,  22.,
         5.,  21.,  12.,   9.,  15.,  23.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:29:55.104711] !!! ERROR !!!
[2019-04-26 21:29:55.105000] (13, array([  5.,  15.,  24.,  18.,  21.,  16.,  14.,   1.,   4.,  20.,  22.,
        23.,  17.,   9.,  10.,   3.,  25.,   6.,  12.,  19.,   7.,  13.,
         2.,   8.,  11.,   0.,  26.,  27.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:30:15.424689] !!! ERROR !!!
[2019-04-26 21:30:15.424928] (12, array([ 25.,  23.,   0.,   9.,  12.,  19.,  16.,  27.,  22.,  14.,   7.,
        21.,  17.,  13.,   1.,  24.,  10.,   2.,   3.,   8.,  20.,  18.,
         4.,   6.,  26.,  11.,   5.,  15.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:30:15.548252] !!! ERROR !!!
[2019-04-26 21:30:15.548612] (13, array([ 24.,  20.,   9.,  22.,  10.,  27.,  12.,   3.,  26.,  14.,   6.,
         2.,  21.,   4.,  13.,   5.,  18.,  16.,  11.,   1.,  25.,  19.,
         8.,   0.,  23.,  17.,   7.,  15.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:34:39.321617] !!! ERROR !!!
[2019-04-26 21:34:39.321830] ('index, permutation ', 12, array([ 23.,   4.,  15.,  10.,  19.,   0.,   2.,   3.,  24.,   8.,  14.,
         7.,  26.,  21.,   1.,  27.,  25.,   6.,   9.,  18.,  13.,  17.,
         5.,  16.,  20.,  11.,  12.,  22.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:34:39.463404] !!! ERROR !!!
[2019-04-26 21:34:39.463626] ('index, permutation ', 13, array([  2.,  14.,   5.,   9.,   3.,  26.,  23.,   1.,  12.,   6.,  10.,
        25.,  16.,  21.,  18.,   7.,  11.,   8.,  24.,  27.,  22.,   0.,
        19.,  20.,  13.,  17.,   4.,  15.]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:35:17.498302] !!! ERROR !!!
[2019-04-26 21:35:17.498593] ('index, permutation ', 12, array([ 11.,  20.,   0.,   6.,  22.,   9.,  10.,  13.,  21.,  17.,   4.,
         7.,   5.,  18.,  14.,  27.,  15.,  12.,   3.,   2.,  26.,  19.,
        23.,   1.,  16.,   8.,  25.,  24.]), array([ 2, 23, 19, 18, 10, 12,  3, 11, 25,  5,  6,  0, 17,  7, 14, 16, 24,
        9, 13, 21,  1,  8,  4, 22, 27, 26, 20, 15]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:35:17.629454] !!! ERROR !!!
[2019-04-26 21:35:17.629705] ('index, permutation ', 13, array([  6.,   7.,  15.,  14.,  26.,  24.,  27.,  20.,   1.,  13.,   2.,
         9.,  21.,  10.,   5.,  25.,  17.,  18.,   4.,   0.,  11.,  16.,
        23.,   3.,  12.,  22.,  19.,   8.]), array([19,  8, 10, 23, 18, 14,  0,  1, 27, 11, 13, 20, 24,  9,  3,  2, 21,
       16, 17, 26,  7, 12, 25, 22,  5, 15,  4,  6]))
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:35:46.553894] !!! ERROR !!!
[2019-04-26 21:35:46.554197] ('index, permutation ', ['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252'])
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:35:46.686090] !!! ERROR !!!
[2019-04-26 21:35:46.686403] ('index, permutation ', ['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252'])
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:36:29.894158] !!! ERROR !!!
[2019-04-26 21:36:29.894360] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 112, in computeloglikelihood
    print(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:36:30.026719] !!! ERROR !!!
[2019-04-26 21:36:30.026955] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 112, in computeloglikelihood
    print(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:37:29.130880] !!! ERROR !!!
[2019-04-26 21:37:29.131196] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 112
    print(letterp[int(inverse_permutation[firstindex]])
                                                     ^
SyntaxError: invalid syntax

[2019-04-26 21:37:29.181056] !!! ERROR !!!
[2019-04-26 21:37:29.181298] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 112
    print(letterp[int(inverse_permutation[firstindex]])
                                                     ^
SyntaxError: invalid syntax

[2019-04-26 21:37:44.293576] !!! ERROR !!!
[2019-04-26 21:37:44.293865] 0.0643084687012869
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:37:44.430669] !!! ERROR !!!
[2019-04-26 21:37:44.430907] 0.0622880442581890
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[inverse_permutation[firstindex]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:38:28.863778] !!! ERROR !!!
[2019-04-26 21:38:28.864022] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 114, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:38:29.002132] !!! ERROR !!!
[2019-04-26 21:38:29.002393] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 114, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:39:15.848199] !!! ERROR !!!
[2019-04-26 21:39:15.848432] ['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252']
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:39:15.969302] !!! ERROR !!!
[2019-04-26 21:39:15.969613] ['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252']
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:39:51.330417] !!! ERROR !!!
[2019-04-26 21:39:51.330639] (['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252'], 8)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:39:51.466497] !!! ERROR !!!
[2019-04-26 21:39:51.466745] (['0.0643084687012869', '0.0124240852023591', '0.0186285748149663', '0.0354867000586228', '0.100298023499090', '0.0180969606192986', '0.0160730501814751', '0.0503605680544605', '0.0558449092566523', '0.00101834620924219', '0.00576176828244459', '0.0313693045382422', '0.0228347179510717', '0.0565304882193713', '0.0622880442581890', '0.0128126283644933', '0.000905632379778209', '0.0482666472225628', '0.0497274242624071', '0.0705347457809296', '0.0230119226829610', '0.00816332814888451', '0.0195822848720030', '0.00120513742662707', '0.0179691408126900', '0.000318823267620396', '0.186944020153698', '0.00923425477857252'], 1)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:40:34.206968] !!! ERROR !!!
[2019-04-26 21:40:34.207232] 0.000905632379778209
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:40:34.336666] !!! ERROR !!!
[2019-04-26 21:40:34.336901] 0.186944020153698
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 115, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:41:40.313027] !!! ERROR !!!
[2019-04-26 21:41:40.313273] ('0.0179691408126900', <type 'str'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 118, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:41:40.442252] !!! ERROR !!!
[2019-04-26 21:41:40.442486] ('0.00120513742662707', <type 'str'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 118, in computeloglikelihood
    value = log(letterp[int(inverse_permutation[firstindex])])
TypeError: a float is required

[2019-04-26 21:42:40.297234] !!! ERROR !!!
[2019-04-26 21:42:40.297477] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 120, in computeloglikelihood
    value += ciphermatrix[i][j]*log(transitions[inverse_permutation[i]][inverse_permutation[j]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:42:40.435776] !!! ERROR !!!
[2019-04-26 21:42:40.436048] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 120, in computeloglikelihood
    value += ciphermatrix[i][j]*log(transitions[inverse_permutation[i]][inverse_permutation[j]])
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:43:09.933389] !!! ERROR !!!
[2019-04-26 21:43:09.933631] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = float(util._read_csv("data", "alphabet")[0])
TypeError: float() argument must be a string or a number

[2019-04-26 21:43:10.066063] !!! ERROR !!!
[2019-04-26 21:43:10.066359] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 13, in decode
    alphabet = float(util._read_csv("data", "alphabet")[0])
TypeError: float() argument must be a string or a number

[2019-04-26 21:44:14.574043] !!! ERROR !!!
[2019-04-26 21:44:14.574290] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 76, in decodeMC
    new_permutation[a], new_permutation[b] = new_permutation[b],new_permutation[a]
IndexError: index out of bounds

[2019-04-26 21:44:14.711458] !!! ERROR !!!
[2019-04-26 21:44:14.711749] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 76, in decodeMC
    new_permutation[a], new_permutation[b] = new_permutation[b],new_permutation[a]
IndexError: index out of bounds

[2019-04-26 21:44:43.241572] !!! ERROR !!!
[2019-04-26 21:44:43.241798] (24, 25)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[inverse_permutation[i]][inverse_permutation[j]]))
TypeError: list indices must be integers, not numpy.float64

[2019-04-26 21:44:43.369316] !!! ERROR !!!
[2019-04-26 21:44:43.369575] (4, 19)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[inverse_permutation[i]][inverse_permutation[j]]))
TypeError: list indices must be integers, not numpy.float64

[2019-04-27 16:00:45.758296] !!! ERROR !!!
[2019-04-27 16:00:45.758814] (5, 20)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[inverse_permutation[i]][inverse_permutation[j]]))
TypeError: list indices must be integers, not numpy.float64

[2019-04-27 16:00:45.885531] !!! ERROR !!!
[2019-04-27 16:00:45.885724] (2, 8)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[inverse_permutation[i]][inverse_permutation[j]]))
TypeError: list indices must be integers, not numpy.float64

[2019-04-27 16:01:57.392646] !!! ERROR !!!
[2019-04-27 16:01:57.392953] (5, 15)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]))
IndexError: string index out of range

[2019-04-27 16:01:57.515483] !!! ERROR !!!
[2019-04-27 16:01:57.515854] (24, 5)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    value += ciphermatrix[i][j]*log(float(transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]))
ValueError: math domain error

[2019-04-27 16:02:46.357260] !!! ERROR !!!
[2019-04-27 16:02:46.357498] (6, 9)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    v = float(transitions[int(inverse_permutation[i])][int(inverse_permutation[j])])
ValueError: could not convert string to float: .

[2019-04-27 16:02:46.477965] !!! ERROR !!!
[2019-04-27 16:02:46.478195] (23, 27)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    v = float(transitions[int(inverse_permutation[i])][int(inverse_permutation[j])])
IndexError: string index out of range

[2019-04-27 16:05:07.834156] !!! ERROR !!!
[2019-04-27 16:05:07.834422] (9, 3)
('access value is ', '9')
('access value is ', '7')
('access value is ', '0')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 124, in computeloglikelihood
    value += ciphermatrix[i][j]*log(v)
ValueError: math domain error

[2019-04-27 16:05:07.968937] !!! ERROR !!!
[2019-04-27 16:05:07.969171] (12, 6)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:06:00.049298] !!! ERROR !!!
[2019-04-27 16:06:00.049515] (17, 27)
('access value is a, v', '7', 7.0)
('access value is a, v', '3', 3.0)
('access value is a, v', '3', 3.0)
('access value is a, v', '2', 2.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:06:00.192002] !!! ERROR !!!
[2019-04-27 16:06:00.192178] (21, 28)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 77, in decodeMC
    new_permutation[a], new_permutation[b] = new_permutation[b],new_permutation[a]
IndexError: index out of bounds

[2019-04-27 16:07:31.202058] !!! ERROR !!!
[2019-04-27 16:07:31.202260] (21, 10)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:07:31.334070] !!! ERROR !!!
[2019-04-27 16:07:31.334315] (14, 13)
('access value is a, v', '7', 7.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 80, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:09:00.404460] !!! ERROR !!!
[2019-04-27 16:09:00.404906] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 121, in computeloglikelihood
    v = float(transitions[int(inverse_permutation[i])][int(inverse_permutation[j])])
ValueError: could not convert string to float: .

[2019-04-27 16:09:00.550995] !!! ERROR !!!
[2019-04-27 16:09:00.551230] ('access value is a, v', '0', 0.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 124, in computeloglikelihood
    value += ciphermatrix[i][j]*log(v)
ValueError: math domain error

[2019-04-27 16:10:26.889200] !!! ERROR !!!
[2019-04-27 16:10:26.889442] ('access value is a, v', '3', 3.0, 1.0986122886681098)
('access value is a, v', '1', 1.0, 0.0)
('access value is a, v', '5', 5.0, 1.6094379124341003)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 120, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:10:27.013394] !!! ERROR !!!
[2019-04-27 16:10:27.013605] ('access value is a, v', '7', 7.0, 1.9459101490553132)
('access value is a, v', '1', 1.0, 0.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 120, in computeloglikelihood
    a = transitions[int(inverse_permutation[i])][int(inverse_permutation[j])]
IndexError: string index out of range

[2019-04-27 16:12:35.187266] !!! ERROR !!!
[2019-04-27 16:12:35.187494] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 122, in computeloglikelihood
    print("access value is a, v", a, v, log(v))
ValueError: math domain error

[2019-04-27 16:12:35.307878] !!! ERROR !!!
[2019-04-27 16:12:35.308197] ('access value is a, v', '0.000504501241865747', 0.000504501241865747, -7.591940256596342)
('access value is a, v', '0.00470280728061659', 0.00470280728061659, -5.359595654826826)
('access value is a, v', '0.189907131295450', 0.18990713129545, -1.6612201089703584)
('access value is a, v', '0.0780910624593626', 0.0780910624593626, -2.549879665824969)
('access value is a, v', '0.382135348343922', 0.382135348343922, -0.9619804180938666)
('access value is a, v', '0.0546289060302895', 0.0546289060302895, -2.907192121847512)
('access value is a, v', '0.0145998388284039', 0.0145998388284039, -4.226744789479196)
('access value is a, v', '0.0302411821016579', 0.0302411821016579, -3.4985506377715345)
('access value is a, v', '0.00474800705091674', 0.00474800705091674, -5.350030317207018)
('access value is a, v', '0.119610114953939', 0.119610114953939, -2.1235178678482467)
('access value is a, v', '0.0482646729939516', 0.0482646729939516, -3.031055393925652)
('access value is a, v', '0.00454345364777428', 0.00454345364777428, -5.394067840757377)
('access value is a, v', '0.0554097490188718', 0.0554097490188718, -2.892999725640807)
('access value is a, v', '0.115055015839247', 0.115055015839247, -2.1623448664128673)
('access value is a, v', '0.227838623111918', 0.227838623111918, -1.479117694000461)
('access value is a, v', '0.0225309904453162', 0.0225309904453162, -3.7928635643273196)
('access value is a, v', '0.0522355078608665', 0.0522355078608665, -2.9519927881235524)
('access value is a, v', '0.0723050492710299', 0.0723050492710299, -2.626861314482381)
('access value is a, v', '0.0155120223373132', 0.0155120223373132, -4.166139921040683)
('access value is a, v', '0.132769720350066', 0.132769720350066, -2.0191390773500553)
('access value is a, v', '9.99720078378055e-06', 9.99720078378055e-06, -11.513205425777544)
('access value is a, v', '0.0499380176707558', 0.0499380176707558, -2.9969726891362916)
('access value is a, v', '0.113551483194411', 0.113551483194411, -2.1754989484779115)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 122, in computeloglikelihood
    print("access value is a, v", a, v, log(v))
ValueError: math domain error

[2019-04-27 16:13:19.638647] !!! ERROR !!!
[2019-04-27 16:13:19.638860] ('access value is a, v', '0.000105149046774822', 0.000105149046774822)
('the log', -9.160131721241136)
('access value is a, v', '0.00221963984378216', 0.00221963984378216)
('the log', -6.110410328789628)
('access value is a, v', '3.52378768774005e-05', 3.52378768774005e-05)
('the log', -10.2533890062311)
('access value is a, v', '0.00996061819834567', 0.00996061819834567)
('the log', -4.6091161412047805)
('access value is a, v', '9.99720078378055e-06', 9.99720078378055e-06)
('the log', -11.513205425777544)
('access value is a, v', '0.293961998006551', 0.293961998006551)
('the log', -1.2243047784791719)
('access value is a, v', '0.000199786999334956', 0.000199786999334956)
('the log', -8.518258762260475)
('access value is a, v', '0.000465450539452598', 0.000465450539452598)
('the log', -7.672504719410938)
('access value is a, v', '0.00112737598030164', 0.00112737598030164)
('the log', -6.787862487935247)
('access value is a, v', '0.0800528969385461', 0.0800528969385461)
('the log', -2.5250676510805934)
('access value is a, v', '0.147757310199344', 0.147757310199344)
('the log', -1.9121841471053558)
('access value is a, v', '0.170874051303256', 0.170874051303256)
('the log', -1.7668285359460854)
('access value is a, v', '0.000371074986893743', 0.000371074986893743)
('the log', -7.899106394773145)
('access value is a, v', '0.000313877695988483', 0.000313877695988483)
('the log', -8.066507151153495)
('access value is a, v', '0', 0.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 123, in computeloglikelihood
    print("the log", log(v))
ValueError: math domain error

[2019-04-27 16:13:19.776091] !!! ERROR !!!
[2019-04-27 16:13:19.776454] ('access value is a, v', '0.0411808887681220', 0.041180888768122)
('the log', -3.189780995096646)
('access value is a, v', '0.000145996576604672', 0.000145996576604672)
('the log', -8.83192738444405)
('access value is a, v', '0.000253923912961910', 0.00025392391296191)
('the log', -8.27847589108945)
('access value is a, v', '0.00160585022072706', 0.00160585022072706)
('the log', -6.434101930118684)
('access value is a, v', '0.0128127046681643', 0.0128127046681643)
('the log', -4.357318048110466)
('access value is a, v', '9.99720078378055e-06', 9.99720078378055e-06)
('the log', -11.513205425777544)
('access value is a, v', '0.0344702729540876', 0.0344702729540876)
('the log', -3.3676579798862933)
('access value is a, v', '0.00428198162962897', 0.00428198162962897)
('the log', -5.453339378961875)
('access value is a, v', '0.0279692748410057', 0.0279692748410057)
('the log', -3.576648698418065)
('access value is a, v', '3.33726234918346e-05', 3.33726234918346e-05)
('the log', -10.307774650016311)
('access value is a, v', '9.99720078378054e-06', 9.99720078378054e-06)
('the log', -11.513205425777544)
('access value is a, v', '0', 0.0)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 28, in decode
    pcipherindex = decodeMC(niters, nstop, ciphermatrix, firstindex, transitions, letterp, has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 79, in decodeMC
    ratiolog = computeloglikelihood(ciphermatrix, firstindex, new_permutation, transitions, letterp) - computeloglikelihood(ciphermatrix, firstindex, permutation, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 123, in computeloglikelihood
    print("the log", log(v))
ValueError: math domain error

[2019-04-27 16:16:07.550824] !!! ERROR !!!
[2019-04-27 16:16:07.551063] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 29, in decode
    pcipher = util.to_text(pcipherindex)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/util.py", line 24, in to_text
    d = dict(zip(range(len(alphabet))), alphabet)
TypeError: dict expected at most 1 arguments, got 2

[2019-04-27 16:16:07.718917] !!! ERROR !!!
[2019-04-27 16:16:07.719215] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/decode.py", line 29, in decode
    pcipher = util.to_text(pcipherindex)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/handout-2/util.py", line 24, in to_text
    d = dict(zip(range(len(alphabet))), alphabet)
TypeError: dict expected at most 1 arguments, got 2

[2019-04-27 16:20:31.859901] !!! ERROR !!!
[2019-04-27 16:20:31.861490] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:21:48.618096] !!! ERROR !!!
[2019-04-27 16:21:48.618704] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:22:37.119348] !!! ERROR !!!
[2019-04-27 16:22:37.120073] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:23:28.438451] !!! ERROR !!!
[2019-04-27 16:23:28.438968] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:23:49.253597] !!! ERROR !!!
[2019-04-27 16:23:49.254332] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:29:04.315885] !!! ERROR !!!
[2019-04-27 16:29:04.316510] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:31:57.569413] !!! ERROR !!!
[2019-04-27 16:31:57.570079] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:36:27.785745] !!! ERROR !!!
[2019-04-27 16:36:27.786993] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:37:01.075829] !!! ERROR !!!
[2019-04-27 16:37:01.076535] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:50:02.385981] !!! ERROR !!!
[2019-04-27 16:50:02.387379] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:50:28.638242] !!! ERROR !!!
[2019-04-27 16:50:28.639083] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:50:54.937258] !!! ERROR !!!
[2019-04-27 16:50:54.938002] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:51:49.988637] !!! ERROR !!!
[2019-04-27 16:51:49.989280] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:53:43.554997] !!! ERROR !!!
[2019-04-27 16:53:43.555594] Traceback (most recent call last):
  File "test.py", line 77, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 58, in test
    score = compare(plaintext, output)
  File "test.py", line 30, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:56:10.638971] !!! ERROR !!!
[2019-04-27 16:56:10.639769] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-27 16:56:34.316408] !!! ERROR !!!
[2019-04-27 16:56:34.317047] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-30 15:15:47.909597] !!! ERROR !!!
[2019-04-30 15:15:47.917902] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 51
    s = 0
        ^
IndentationError: unindent does not match any outer indentation level

[2019-04-30 15:15:47.953646] !!! ERROR !!!
[2019-04-30 15:15:47.954057] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 51
    s = 0
        ^
IndentationError: unindent does not match any outer indentation level

[2019-04-30 15:16:29.048513] !!! ERROR !!!
[2019-04-30 15:16:29.049075] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 17
    def get_random_number_for_right_deck(n: int, seed: int=None, ) -> int:
                                          ^
SyntaxError: invalid syntax

[2019-04-30 15:16:29.383663] !!! ERROR !!!
[2019-04-30 15:16:29.384414] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 17
    def get_random_number_for_right_deck(n: int, seed: int=None, ) -> int:
                                          ^
SyntaxError: invalid syntax

[2019-04-30 15:17:49.547166] !!! ERROR !!!
[2019-04-30 15:17:49.549358] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 74
    def shuffle(deck: np.array, seed: int=None, ) -> np.array:
                    ^
SyntaxError: invalid syntax

[2019-04-30 15:17:49.810732] !!! ERROR !!!
[2019-04-30 15:17:49.810960] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 74
    def shuffle(deck: np.array, seed: int=None, ) -> np.array:
                    ^
SyntaxError: invalid syntax

[2019-04-30 15:18:24.619331] !!! ERROR !!!
[2019-04-30 15:18:24.619962] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 3, in <module>
    import typing
ImportError: No module named typing

[2019-04-30 15:18:24.938755] !!! ERROR !!!
[2019-04-30 15:18:24.938952] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 3, in <module>
    import typing
ImportError: No module named typing

[2019-04-30 15:19:17.636512] !!! ERROR !!!
[2019-04-30 15:19:17.637128] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 4, in <module>
    matplotlib.use('nbagg')
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/__init__.py", line 1149, in use
    name = validate_backend(arg)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/rcsetup.py", line 146, in validate_backend
    return _validate_standard_backends(s)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/rcsetup.py", line 57, in __call__
    % (self.key, s, self.valid.values()))
ValueError: Unrecognized backend string "nbagg": valid strings are ['pdf', 'pgf', 'Qt4Agg', 'GTK', 'GTKAgg', 'ps', 'agg', 'cairo', 'MacOSX', 'GTKCairo', 'WXAgg', 'template', 'TkAgg', 'GTK3Cairo', 'GTK3Agg', 'svg', 'WebAgg', 'CocoaAgg', 'emf', 'gdk', 'WX']

[2019-04-30 15:19:17.950850] !!! ERROR !!!
[2019-04-30 15:19:17.951106] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 4, in <module>
    matplotlib.use('nbagg')
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/__init__.py", line 1149, in use
    name = validate_backend(arg)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/rcsetup.py", line 146, in validate_backend
    return _validate_standard_backends(s)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/matplotlib/rcsetup.py", line 57, in __call__
    % (self.key, s, self.valid.values()))
ValueError: Unrecognized backend string "nbagg": valid strings are ['pdf', 'pgf', 'Qt4Agg', 'GTK', 'GTKAgg', 'ps', 'agg', 'cairo', 'MacOSX', 'GTKCairo', 'WXAgg', 'template', 'TkAgg', 'GTK3Cairo', 'GTK3Agg', 'svg', 'WebAgg', 'CocoaAgg', 'emf', 'gdk', 'WX']

[2019-04-30 15:19:49.286772] !!! ERROR !!!
[2019-04-30 15:19:49.287355] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 6, in <module>
    import sklearn.utils
ImportError: No module named sklearn.utils

[2019-04-30 15:19:49.625666] !!! ERROR !!!
[2019-04-30 15:19:49.625856] Traceback (most recent call last):
  File "./decode", line 7, in <module>
    from decode import decode
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 6, in <module>
    import riffleshuffle
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 6, in <module>
    import sklearn.utils
ImportError: No module named sklearn.utils

[2019-04-30 15:25:45.739021] !!! ERROR !!!
[2019-04-30 15:25:45.739805] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:25:46.056520] !!! ERROR !!!
[2019-04-30 15:25:46.056774] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:28:58.098464] !!! ERROR !!!
[2019-04-30 15:28:58.098703] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 129, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:28:58.423059] !!! ERROR !!!
[2019-04-30 15:28:58.423420] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 129, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:41:30.463039] !!! ERROR !!!
[2019-04-30 15:41:30.463553] 0.00509415163978553
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:41:30.807717] !!! ERROR !!!
[2019-04-30 15:41:30.808018] 0.00509415163978553
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(transitions[i, j])
TypeError: a float is required

[2019-04-30 15:42:06.513445] !!! ERROR !!!
[2019-04-30 15:42:06.513662] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:42:06.873329] !!! ERROR !!!
[2019-04-30 15:42:06.873551] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:42:45.565809] !!! ERROR !!!
[2019-04-30 15:42:45.566047] ('here, the type is', <type 'numpy.string_'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:42:45.889159] !!! ERROR !!!
[2019-04-30 15:42:45.889345] ('here, the type is', <type 'numpy.string_'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:43:14.969490] !!! ERROR !!!
[2019-04-30 15:43:14.969793] ('here, the type is', <type 'float'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:43:15.312697] !!! ERROR !!!
[2019-04-30 15:43:15.312913] ('here, the type is', <type 'float'>)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:43:50.709806] !!! ERROR !!!
[2019-04-30 15:43:50.709977] ('here, the type is', -5.279662134555115)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:43:51.067820] !!! ERROR !!!
[2019-04-30 15:43:51.067979] ('here, the type is', -5.279662134555115)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 128, in logtransitionmatrix
    logmatrix[i, j] = log(float(transitions[i, j]))
ValueError: math domain error

[2019-04-30 15:44:24.112196] !!! ERROR !!!
[2019-04-30 15:44:24.112937] ('here, the type is', -7.591940256596342)
('here, the type is', -2.892999725640807)
('here, the type is', -2.1754989484779115)
('here, the type is', -3.4985506377715345)
('here, the type is', -2.9969726891362916)
('here, the type is', -2.549879665824969)
('here, the type is', -2.822673381961604)
('here, the type is', -1.6612201089703584)
('here, the type is', -4.226744789479196)
('here, the type is', -1.8478515241113662)
('here, the type is', -5.350030317207018)
('here, the type is', -2.6552891761106956)
('here, the type is', -2.0191390773500553)
('here, the type is', -4.166139921040683)
('here, the type is', -5.359595654826826)
('here, the type is', -2.1235178678482467)
('here, the type is', -11.513205425777544)
('here, the type is', -2.907192121847512)
('here, the type is', -3.031055393925652)
('here, the type is', -3.4361830062634717)
('here, the type is', -3.7928635643273196)
('here, the type is', -2.9519927881235524)
('here, the type is', -1.479117694000461)
('here, the type is', -2.626861314482381)
('here, the type is', -5.394067840757377)
('here, the type is', -0.9619804180938666)
('here, the type is', -2.1623448664128673)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    print("here, the type is", log(float(transitions[i, j])))
ValueError: math domain error

[2019-04-30 15:44:24.446300] !!! ERROR !!!
[2019-04-30 15:44:24.446524] ('here, the type is', -7.591940256596342)
('here, the type is', -2.892999725640807)
('here, the type is', -2.1754989484779115)
('here, the type is', -3.4985506377715345)
('here, the type is', -2.9969726891362916)
('here, the type is', -2.549879665824969)
('here, the type is', -2.822673381961604)
('here, the type is', -1.6612201089703584)
('here, the type is', -4.226744789479196)
('here, the type is', -1.8478515241113662)
('here, the type is', -5.350030317207018)
('here, the type is', -2.6552891761106956)
('here, the type is', -2.0191390773500553)
('here, the type is', -4.166139921040683)
('here, the type is', -5.359595654826826)
('here, the type is', -2.1235178678482467)
('here, the type is', -11.513205425777544)
('here, the type is', -2.907192121847512)
('here, the type is', -3.031055393925652)
('here, the type is', -3.4361830062634717)
('here, the type is', -3.7928635643273196)
('here, the type is', -2.9519927881235524)
('here, the type is', -1.479117694000461)
('here, the type is', -2.626861314482381)
('here, the type is', -5.394067840757377)
('here, the type is', -0.9619804180938666)
('here, the type is', -2.1623448664128673)
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 47, in simpledecode
    logtransitions = logtransitionmatrix(transitions)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 127, in logtransitionmatrix
    print("here, the type is", log(float(transitions[i, j])))
ValueError: math domain error

[2019-04-30 15:44:52.274300] !!! ERROR !!!
[2019-04-30 15:44:52.274545] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequencies(textvector, m)
AttributeError: 'module' object has no attribute 'empiricalfrequencies'

[2019-04-30 15:44:52.611208] !!! ERROR !!!
[2019-04-30 15:44:52.611527] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequencies(textvector, m)
AttributeError: 'module' object has no attribute 'empiricalfrequencies'

[2019-04-30 15:45:18.961403] !!! ERROR !!!
[2019-04-30 15:45:18.961966] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequency(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/statistics.py", line 61, in empiricalfrequency
    frequencies = np.zeros(len(alphabet))
NameError: global name 'alphabet' is not defined

[2019-04-30 15:45:19.275492] !!! ERROR !!!
[2019-04-30 15:45:19.275743] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequency(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/statistics.py", line 61, in empiricalfrequency
    frequencies = np.zeros(len(alphabet))
NameError: global name 'alphabet' is not defined

[2019-04-30 15:45:37.018771] !!! ERROR !!!
[2019-04-30 15:45:37.019014] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequency(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/statistics.py", line 64, in empiricalfrequency
    counter[textvector[i]] += 1/len(textvector)
NameError: global name 'counter' is not defined

[2019-04-30 15:45:37.354606] !!! ERROR !!!
[2019-04-30 15:45:37.354816] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 88, in initialize
    empiricalfrequencies = statistics.empiricalfrequency(textvector, m)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/statistics.py", line 64, in empiricalfrequency
    counter[textvector[i]] += 1/len(textvector)
NameError: global name 'counter' is not defined

[2019-04-30 15:46:07.314440] !!! ERROR !!!
[2019-04-30 15:46:07.314780] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (letterp[i] - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for -: 'numpy.string_' and 'numpy.float64'

[2019-04-30 15:46:07.644952] !!! ERROR !!!
[2019-04-30 15:46:07.645179] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (letterp[i] - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for -: 'numpy.string_' and 'numpy.float64'

[2019-04-30 15:47:05.238049] !!! ERROR !!!
[2019-04-30 15:47:05.238463] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:47:05.611282] !!! ERROR !!!
[2019-04-30 15:47:05.611482] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:47:36.439694] !!! ERROR !!!
[2019-04-30 15:47:36.440524] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:47:36.861188] !!! ERROR !!!
[2019-04-30 15:47:36.861357] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:47:47.180149] !!! ERROR !!!
[2019-04-30 15:47:47.183556] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:47:47.519242] !!! ERROR !!!
[2019-04-30 15:47:47.519441] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:08.639714] !!! ERROR !!!
[2019-04-30 15:48:08.639953] [ 0.01759032  0.01702289  0.10043503  0.05995839  0.06865897  0.00870059
  0.01437488  0.01267259  0.04671837  0.0472858   0.06071496  0.00094572
  0.02042746  0.01853603  0.01324002  0.03820692  0.01172688  0.00510687
  0.          0.06752412  0.06676754  0.03215434  0.00094572  0.17911859
  0.00075657  0.0525818   0.02345375  0.01437488]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:08.976575] !!! ERROR !!!
[2019-04-30 15:48:08.976791] [ 0.13920938  0.05277095  0.07244184  0.01361831  0.0472858   0.01305088
  0.04539436  0.02874976  0.0153206   0.02818233  0.03877435  0.00510687
  0.05504067  0.01324002  0.01078116  0.00888973  0.00662001  0.01115945
  0.01342917  0.03101948  0.085871    0.05144695  0.00945716  0.04747494
  0.01248345  0.06449782  0.02156232  0.05712124]
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:24.977270] !!! ERROR !!!
[2019-04-30 15:48:24.977499] <type 'numpy.ndarray'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:25.321540] !!! ERROR !!!
[2019-04-30 15:48:25.321751] <type 'numpy.ndarray'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:54.937154] !!! ERROR !!!
[2019-04-30 15:48:54.937479] <type 'numpy.float64'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:48:55.260791] !!! ERROR !!!
[2019-04-30 15:48:55.261004] <type 'numpy.float64'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 52, in simpledecode
    permutation = initialize(textvector, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 94, in initialize
    cost_matrix[i, j] = (float(letterp[i]) - empiricalfrequencies[j])^2
TypeError: unsupported operand type(s) for ^: 'numpy.float64' and 'int'

[2019-04-30 15:50:11.389514] !!! ERROR !!!
[2019-04-30 15:50:11.389760] <type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:50:11.781515] !!! ERROR !!!
[2019-04-30 15:50:11.782453] <type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
<type 'numpy.string_'> <type 'numpy.float64'>
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:50:24.328341] !!! ERROR !!!
[2019-04-30 15:50:24.328578] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 118, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:50:24.681026] !!! ERROR !!!
[2019-04-30 15:50:24.681284] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 118, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:51:02.472618] !!! ERROR !!!
[2019-04-30 15:51:02.472925] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 118, in loglikelihood
    value += float(permutedmatrix[i, j])*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'float'

[2019-04-30 15:51:02.887846] !!! ERROR !!!
[2019-04-30 15:51:02.888120] Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 118, in loglikelihood
    value += float(permutedmatrix[i, j])*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'float'

[2019-04-30 15:51:44.598881] !!! ERROR !!!
[2019-04-30 15:51:44.599174] (14.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += float(permutedmatrix[i, j])*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'float'

[2019-04-30 15:51:44.959280] !!! ERROR !!!
[2019-04-30 15:51:44.959511] (2.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += float(permutedmatrix[i, j])*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'float'

[2019-04-30 15:53:03.014280] !!! ERROR !!!
[2019-04-30 15:53:03.018384] ('wtf is this type', <type 'numpy.string_'>)
(14.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:53:03.382176] !!! ERROR !!!
[2019-04-30 15:53:03.382399] ('wtf is this type', <type 'numpy.string_'>)
(2.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:53:33.459481] !!! ERROR !!!
[2019-04-30 15:53:33.459733] ('wtf is this type', <type 'numpy.string_'>)
(14.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:53:33.813565] !!! ERROR !!!
[2019-04-30 15:53:33.813855] ('wtf is this type', <type 'numpy.string_'>)
(2.0, '-7.5919402566')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 53, in simpledecode
    logl = loglikelihood(ciphermatrix, logtransitions, permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 119, in loglikelihood
    value += permutedmatrix[i, j]*logtransitions[i, j]
TypeError: can't multiply sequence by non-int of type 'numpy.float64'

[2019-04-30 15:54:21.380640] !!! ERROR !!!
[2019-04-30 15:54:21.380867] /Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py:119: RuntimeWarning: invalid value encountered in double_scalars
  value += permutedmatrix[i, j]*float(logtransitions[i, j])
(14.0, '-7.5919402566')
(0.0, '-2.89299972564')
(0.0, '-2.17549894848')
(93.0, '-3.49855063777')
(36.0, '-2.99697268914')
(21.0, '-2.54987966582')
(1.0, '-2.82267338196')
(23.0, '-1.66122010897')
(10.0, '-4.22674478948')
(0.0, '-1.84785152411')
(14.0, '-5.35003031721')
(30.0, '-2.65528917611')
(24.0, '-2.01913907735')
(0.0, '-4.16613992104')
(29.0, '-5.35959565483')
(13.0, '-2.12351786785')
(2.0, '-11.5132054258')
(2.0, '-2.90719212185')
(28.0, '-3.03105539393')
(15.0, '-3.43618300626')
(38.0, '-3.79286356433')
(0.0, '-2.95199278812')
(53.0, '-1.479117694')
(2.0, '-2.62686131448')
(26.0, '-5.39406784076')
(7.0, '-0.961980418094')
(31.0, '-2.16234486641')
(19.0, '-inf')
(10.0, '-3.82959090217')
(0.0, '-5.27966213456')
(5.0, '-9.64788504834')
(1.0, '-7.15190271838')
(6.0, '-6.97328184811')
(1.0, '-8.77578054841')
(0.0, '-6.73087058268')
(1.0, '-6.30691581091')
(0.0, '-5.00675793546')
(0.0, '-11.5132054258')
(0.0, '-6.91489850832')
(0.0, '-7.15825148417')
(0.0, '-4.23871184928')
(0.0, '-7.69657664896')
(4.0, '-4.85260197102')
(0.0, '-6.46864686715')
(2.0, '-11.5132054258')
(0.0, '-6.26151812028')
(6.0, '-6.55270919181')
(0.0, '-8.0771146701')
(0.0, '-4.13872450468')
(0.0, '-11.5132054258')
(4.0, '-4.97532776819')
(0.0, '-8.2901344836')
(0.0, '-5.40479684522')
(1.0, '-11.5132054258')
(3.0, '-3.06735387503')
(2.0, '-inf')
(22.0, '-3.56702897836')
(0.0, '-10.30777465')
(0.0, '-3.87961079364')
(59.0, '-8.35569785302')
(15.0, '-3.94524374563')
(9.0, '-7.53970576056')
(0.0, '-8.2097358512')
(14.0, '-9.78781466803')
(0.0, '-3.231729152')
(0.0, '-11.5132054258')
(12.0, '-7.43598592516')
(116.0, '-6.63362915467')
(17.0, '-8.99151264824')
(1.0, '-3.29256686501')
(5.0, '-4.78702437241')
(10.0, '-10.3292442468')
(1.0, '-11.5132054258')
(2.0, '-4.64902399434')
(17.0, '-4.57840814989')
(12.0, '-5.88272890227')
(4.0, '-2.91900861194')
(0.0, '-11.5132054258')
(14.0, '-7.18358043068')
(2.0, '-1.74662417916')
(2.0, '-7.36624730814')
(1.0, '-7.67250471941')
(19.0, '-3.29272437077')
(9.0, '-inf')
(0.0, '-2.84036445659')
(0.0, '-7.37067064535')
(0.0, '-9.64788504834')
(0.0, '-4.58187051178')
(100.0, '-2.53972923912')
(0.0, '-7.66840559155')
(0.0, '-7.62352379864')
(0.0, '-8.27391260229')
(0.0, '-3.18773797625')
(0.0, '-11.5132054258')
(0.0, '-8.2470935327')
(75.0, '-2.39290707224')
(19.0, '-8.36633207636')
(0.0, '-1.76705488353')
(0.0, '-4.04814316387')
(0.0, '-9.20372777019')
(0.0, '-11.5132054258')
(1.0, '-3.57240865278')
(21.0, '-7.46872280512')
(21.0, '-9.57132188249')
(0.0, '-4.19238317033')
(0.0, '-11.5132054258')
(1.0, '-6.45373367454')
(0.0, '-8.94422197667')
(0.0, '-6.01477964852')
(9.0, '-11.5132054258')
(0.0, '-3.49348104946')
(0.0, '-inf')
(16.0, '-8.78997490797')
(0.0, '-0.882509566508')
(50.0, '-1.76131449774')
(5.0, '-2.22960891845')
(6.0, '-3.46018806439')
(5.0, '-2.37922386255')
(0.0, '-2.10069898064')
(5.0, '-0.839311107189')
(0.0, '-3.26779725243')
(0.0, '-1.27989497926')
(2.0, '-1.13753942436')
(111.0, '-1.83647729421')
(7.0, '-1.454008019')
(0.0, '-2.39342334731')
(0.0, '-5.95403175414')
(37.0, '-1.57546952174')
(1.0, '-11.5132054258')
(20.0, '-1.50699261685')
(36.0, '-2.17677837566')
(0.0, '-2.48320288479')
(0.0, '-3.77180189496')
(0.0, '-0.265394692612')
(13.0, '-1.94221903146')
(14.0, '-2.51652770293')
(0.0, '-3.19682290053')
(0.0, '-1.08349169964')
(29.0, '-3.78781470887')
(0.0, '-inf')
(21.0, '-4.65689574704')
(0.0, '-10.30777465')
(27.0, '-11.5132054258')
(0.0, '-6.43410193012')
(5.0, '-4.66179344914')
(28.0, '-3.1897809951')
(0.0, '-8.27847589109')
(4.0, '-7.47604878147')
(0.0, '-3.79727990403')
(0.0, '-11.5132054258')
(2.0, '-4.35731804811')
(15.0, '-3.57664869842')
(2.0, '-5.37865728387')
(0.0, '-5.11596665456')
(1.0, '-2.38981270806')
(22.0, '-8.83192738444')
(0.0, '-11.5132054258')
(8.0, '-4.78591438842')
(1.0, '-5.85082063379')
(0.0, '-6.37823212552')
(6.0, '-5.45333937896')
(0.0, '-11.5132054258')
(2.0, '-5.19275722519')
(12.0, '-5.09047806991')
(6.0, '-6.58879923466')
(3.0, '-11.5132054258')
(5.0, '-3.36765797989')
(0.0, '-inf')
(0.0, '-3.93577855887')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-5.19830553926')
(2.0, '-5.18217339449')
(0.0, '-9.0766090887')
(0.0, '-4.30854799536')
(0.0, '-9.30759934491')
(0.0, '-3.59320797572')
(0.0, '-11.5132054258')
(0.0, '-7.14187790227')
(0.0, '-6.87080683331')
(0.0, '-10.6924640728')
(0.0, '-2.02862304248')
(0.0, '-5.77145398328')
(2.0, '-9.32317127705')
(0.0, '-11.5132054258')
(0.0, '-5.05239734996')
(0.0, '-6.82117883443')
(0.0, '-9.73111966332')
(0.0, '-2.90923834796')
(0.0, '-11.5132054258')
(0.0, '-9.68991740948')
(0.0, '-8.94422197667')
(0.0, '-8.00665270178')
(0.0, '-11.5132054258')
(0.0, '-4.13012332369')
(0.0, '-inf')
(6.0, '-6.75022688896')
(0.0, '-8.06650715115')
(9.0, '-1.71959695815')
(0.0, '-6.11041032879')
(0.0, '-6.189957295')
(0.0, '-7.89910639477')
(0.0, '-1.91218414711')
(4.0, '-9.16013172124')
(0.0, '-9.22642174227')
(0.0, '-11.5132054258')
(0.0, '-5.13584056187')
(38.0, '-8.51825876226')
(0.0, '-8.54552990265')
(3.0, '-6.78786248794')
(0.0, '-5.7182650049')
(3.0, '-4.6091161412')
(0.0, '-11.5132054258')
(4.0, '-5.81302052631')
(11.0, '-2.52506765108')
(0.0, '-1.22430477848')
(0.0, '-10.2533890062')
(0.0, '-11.5132054258')
(1.0, '-1.76682853595')
(2.0, '-4.54565003228')
(0.0, '-7.24596378722')
(0.0, '-7.67250471941')
(0.0, '-2.48395061378')
(9.0, '-inf')
(1.0, '-3.12679174821')
(0.0, '-3.79957521101')
(4.0, '-3.18632826309')
(0.0, '-2.76811528722')
(0.0, '-4.38935299347')
(1.0, '-2.61263706863')
(0.0, '-3.09626561749')
(0.0, '-2.01597210952')
(0.0, '-8.03284304173')
(0.0, '-3.98744197124')
(0.0, '-1.91005120038')
(7.0, '-2.17893707409')
(2.0, '-2.28974796801')
(0.0, '-3.66689928101')
(0.0, '-4.62334380975')
(4.0, '-2.91350583317')
(0.0, '-11.5132054258')
(3.0, '-2.67805634633')
(1.0, '-2.86186205353')
(0.0, '-2.78063397964')
(0.0, '-3.50375307563')
(0.0, '-2.03622566667')
(1.0, '-1.76081454676')
(0.0, '-2.26457772454')
(0.0, '-4.2325422565')
(0.0, '-2.71046033344')
(3.0, '-2.5795346965')
(0.0, '-inf')
(0.0, '-9.58568213183')
(0.0, '-4.25789028181')
(0.0, '-11.5132054258')
(0.0, '-8.25634938678')
(0.0, '-7.80391074524')
(0.0, '-11.5132054258')
(0.0, '-10.4809571611')
(0.0, '-11.0577830099')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-9.36578157314')
(0.0, '-9.14075265267')
(0.0, '-10.6924640728')
(0.0, '-6.50583096558')
(0.0, '-9.03164170155')
(0.0, '-10.7553734237')
(0.0, '-11.5132054258')
(0.0, '-9.80591877741')
(0.0, '-10.5006771541')
(0.0, '-10.7087139384')
(0.0, '-10.6967848982')
(0.0, '-11.5132054258')
(0.0, '-10.6035440459')
(0.0, '-11.5132054258')
(0.0, '-10.0702197945')
(0.0, '-11.5132054258')
(0.0, '-5.60234029183')
(0.0, '-inf')
(5.0, '-4.25471969071')
(0.0, '-11.5132054258')
(1.0, '-3.20000295608')
(1.0, '-8.09645786925')
(0.0, '-6.75475710599')
(5.0, '-10.9239644018')
(0.0, '-9.80511272538')
(0.0, '-10.5087141009')
(0.0, '-4.89095594718')
(0.0, '-11.5132054258')
(5.0, '-8.73280095135')
(37.0, '-4.55204225022')
(0.0, '-11.0208950451')
(0.0, '-4.46342311441')
(1.0, '-4.28347156518')
(9.0, '-8.25741152904')
(0.0, '-11.5132054258')
(26.0, '-5.00956963597')
(0.0, '-5.38479155485')
(0.0, '-11.3259572194')
(0.0, '-8.81276685876')
(0.0, '-11.5132054258')
(4.0, '-7.24399245529')
(2.0, '-11.5132054258')
(0.0, '-10.5513074778')
(0.0, '-11.5132054258')
(2.0, '-5.10760809198')
(0.0, '-inf')
(173.0, '-2.71984203578')
(45.0, '-2.17124714898')
(36.0, '-3.46541534658')
(29.0, '-4.54151944675')
(100.0, '-3.17281593778')
(31.0, '-4.15480838383')
(1.0, '-3.64646950752')
(2.0, '-6.76641254092')
(6.0, '-3.12019058549')
(0.0, '-11.5132054258')
(33.0, '-4.31307127145')
(0.0, '-1.95176143437')
(1.0, '-5.96774351974')
(0.0, '-4.60289891328')
(129.0, '-3.83356500211')
(20.0, '-2.32292848165')
(41.0, '-11.5132054258')
(33.0, '-4.43582009219')
(89.0, '-5.26266130747')
(6.0, '-4.10676237344')
(1.0, '-2.0864684791')
(0.0, '-11.5132054258')
(49.0, '-5.11080167696')
(16.0, '-6.71308138137')
(0.0, '-5.7643752364')
(28.0, '-3.5829836508')
(72.0, '-3.71874864032')
(6.0, '-inf')
(19.0, '-3.59286680305')
(0.0, '-6.56237812108')
(7.0, '-10.9367522225')
(0.0, '-5.28730860548')
(1.0, '-3.87789310862')
(0.0, '-9.62336110606')
(0.0, '-6.24800567529')
(0.0, '-6.30375858074')
(0.0, '-3.12479512225')
(0.0, '-11.5132054258')
(0.0, '-7.08012356327')
(33.0, '-5.25659687798')
(1.0, '-3.88582248682')
(1.0, '-7.65776738629')
(0.0, '-2.88062092856')
(9.0, '-7.72723266391')
(0.0, '-11.5132054258')
(6.0, '-4.39598730942')
(8.0, '-5.17220047257')
(0.0, '-6.633761839')
(0.0, '-4.03934181576')
(0.0, '-11.5132054258')
(3.0, '-8.66144192376')
(1.0, '-11.5132054258')
(0.0, '-5.23036784426')
(0.0, '-11.5132054258')
(18.0, '-2.87183970073')
(0.0, '-inf')
(5.0, '-1.5975433612')
(0.0, '-9.29577647841')
(0.0, '-10.0976290617')
(0.0, '-5.29299070114')
(0.0, '-2.48703930131')
(0.0, '-9.31307424242')
(0.0, '-4.27033786088')
(0.0, '-6.74413258115')
(0.0, '-1.30872169965')
(0.0, '-11.5132054258')
(0.0, '-1.9282572646')
(0.0, '-5.96390970427')
(0.0, '-6.13499088039')
(0.0, '-4.11011270691')
(0.0, '-1.97548635328')
(0.0, '-9.32317127705')
(0.0, '-11.5132054258')
(0.0, '-3.9692182373')
(0.0, '-6.4063170636')
(0.0, '-6.633761839')
(0.0, '-2.2872342528')
(0.0, '-10.4910077278')
(0.0, '-3.21165012987')
(0.0, '-11.5132054258')
(0.0, '-6.66823653894')
(0.0, '-11.5132054258')
(0.0, '-3.65300599621')
(0.0, '-inf')
(43.0, '-7.74130781709')
(0.0, '-2.4544006188')
(15.0, '-1.5259270009')
(0.0, '-2.8636572487')
(0.0, '-6.3114634967')
(8.0, '-1.72513090831')
(0.0, '-2.60330913862')
(0.0, '-2.54020149663')
(0.0, '-3.04986692214')
(0.0, '-1.41944643007')
(0.0, '-6.53859359518')
(33.0, '-2.56678132657')
(0.0, '-2.36204867147')
(0.0, '-2.46997964899')
(1.0, '-3.19799031533')
(20.0, '-2.08049203337')
(1.0, '-11.5132054258')
(9.0, '-2.69702258049')
(1.0, '-2.86575202887')
(0.0, '-2.17999293279')
(0.0, '-6.90077578593')
(0.0, '-3.22161333306')
(6.0, '-2.31206416029')
(1.0, '-4.87947839942')
(1.0, '-1.81889862193')
(0.0, '-4.47446384666')
(63.0, '-2.84344269748')
(0.0, '-inf')
(5.0, '-4.03028637815')
(0.0, '-11.5132054258')
(13.0, '-10.5734208982')
(34.0, '-9.02403233067')
(32.0, '-4.715614666')
(26.0, '-7.83625311708')
(2.0, '-7.50186005103')
(2.0, '-9.78781466803')
(3.0, '-5.34139107724')
(0.0, '-11.5132054258')
(6.0, '-8.2470935327')
(69.0, '-5.94076298238')
(9.0, '-3.20554548479')
(0.0, '-7.36722353135')
(10.0, '-4.12415063387')
(0.0, '-2.47033798006')
(2.0, '-11.5132054258')
(3.0, '-5.4215193882')
(16.0, '-3.86352593516')
(23.0, '-8.86142225275')
(6.0, '-3.14682128197')
(0.0, '-11.5132054258')
(31.0, '-8.6195038571')
(2.0, '-1.33956701185')
(1.0, '-7.22355065103')
(1.0, '-11.5132054258')
(9.0, '-3.67030620993')
(12.0, '-inf')
(5.0, '-10.8695339161')
(0.0, '-11.5132054258')
(12.0, '-5.16177751195')
(2.0, '-10.2731381544')
(5.0, '-6.27389760818')
(12.0, '-10.9239644018')
(0.0, '-10.8694138243')
(0.0, '-10.6203477926')
(0.0, '-8.8738091013')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(20.0, '-10.8577273401')
(0.0, '-11.5132054258')
(0.0, '-6.48373595074')
(1.0, '-9.11284138397')
(0.0, '-10.7553734237')
(0.0, '-11.5132054258')
(0.0, '-8.18878301826')
(1.0, '-7.53209409')
(0.0, '-10.9123345853')
(0.0, '-10.0886600678')
(0.0, '-11.5132054258')
(6.0, '-11.5132054258')
(0.0, '-4.86375059347')
(6.0, '-10.5513074778')
(0.0, '-11.5132054258')
(3.0, '-6.01012485274')
(3.0, '-inf')
(0.0, '-2.38051879737')
(0.0, '-2.97197330777')
(0.0, '-3.19390221715')
(19.0, '-4.20773228978')
(28.0, '-1.86490774321')
(16.0, '-2.68147173619')
(0.0, '-2.69527973367')
(11.0, '-4.95906093481')
(0.0, '-3.28036839183')
(0.0, '-11.5132054258')
(13.0, '-8.1552579722')
(56.0, '-6.2005820782')
(23.0, '-2.82092880856')
(0.0, '-6.24421730047')
(14.0, '-2.22073073568')
(17.0, '-1.95605398678')
(19.0, '-11.5132054258')
(7.0, '-3.83734716464')
(13.0, '-7.57100440487')
(8.0, '-3.77041006685')
(7.0, '-1.8727084908')
(0.0, '-6.90164984801')
(18.0, '-4.56748477583')
(5.0, '-11.5132054258')
(3.0, '-7.26889081195')
(4.0, '-11.5132054258')
(33.0, '-3.97499294832')
(7.0, '-inf')
(35.0, '-2.19948541446')
(0.0, '-4.01428701292')
(28.0, '-7.04996012532')
(0.0, '-3.79700512141')
(4.0, '-2.86441989376')
(1.0, '-7.27587688818')
(0.0, '-3.80205826632')
(2.0, '-6.33904878404')
(2.0, '-2.14015840442')
(0.0, '-11.5132054258')
(0.0, '-3.38935238802')
(73.0, '-4.37951021267')
(0.0, '-3.85052368889')
(0.0, '-3.39175648209')
(3.0, '-3.69360565506')
(39.0, '-3.92217908512')
(6.0, '-11.5132054258')
(5.0, '-2.862128354')
(18.0, '-2.919803798')
(2.0, '-4.15768807062')
(1.0, '-2.14816893885')
(0.0, '-11.5132054258')
(20.0, '-4.7977324232')
(25.0, '-5.46621341593')
(0.0, '-3.20815111745')
(2.0, '-11.5132054258')
(10.0, '-2.598197822')
(2.0, '-inf')
(4.0, '-2.04149669552')
(0.0, '-4.55141021635')
(0.0, '-2.45390460808')
(0.0, '-7.04781919293')
(1.0, '-3.56567705281')
(3.0, '-3.37740683541')
(0.0, '-5.63027489558')
(0.0, '-3.46956987932')
(0.0, '-1.99382778433')
(0.0, '-11.5132054258')
(0.0, '-7.7915011818')
(71.0, '-4.06352702944')
(0.0, '-7.33505176506')
(0.0, '-2.42476752394')
(0.0, '-2.80370387039')
(0.0, '-3.32757990809')
(0.0, '-11.5132054258')
(12.0, '-3.11743181298')
(1.0, '-2.19732984675')
(0.0, '-3.67317564171')
(0.0, '-2.02658152268')
(0.0, '-11.5132054258')
(0.0, '-7.58734602535')
(0.0, '-1.84379618')
(0.0, '-4.42468373032')
(1.0, '-6.99015489402')
(0.0, '-2.01032762014')
(0.0, '-inf')
(16.0, '-4.49319193662')
(0.0, '-2.04508195957')
(23.0, '-3.4415154168')
(0.0, '-4.62517009204')
(0.0, '-7.37727548205')
(0.0, '-3.36688471976')
(0.0, '-4.01903874158')
(0.0, '-4.82473231233')
(0.0, '-7.60322755593')
(0.0, '-1.20436207078')
(0.0, '-8.34822362171')
(9.0, '-4.26317129301')
(0.0, '-3.00841990157')
(0.0, '-5.45279994051')
(0.0, '-1.8934406283')
(6.0, '-3.53809911604')
(0.0, '-0.00171445351453')
(12.0, '-4.39769720301')
(0.0, '-3.25044846631')
(0.0, '-4.17066863273')
(0.0, '-10.4507106729')
(0.0, '-6.80082919853')
(0.0, '-8.46739812993')
(0.0, '-4.59212519403')
(0.0, '-10.0702197945')
(0.0, '-5.61203575185')
(4.0, '-4.57599074729')
(0.0, '-inf')
(0.0, '-3.43151484758')
(0.0, '-8.53230387264')
(0.0, '-11.5132054258')
(0.0, '-5.83079990504')
(0.0, '-3.92414030055')
(0.0, '-10.5556808156')
(0.0, '-11.5132054258')
(0.0, '-10.8898055156')
(0.0, '-3.97007580976')
(0.0, '-11.5132054258')
(0.0, '-10.2544820654')
(5.0, '-5.38630971374')
(0.0, '-10.2478457284')
(0.0, '-5.41630151426')
(0.0, '-4.2648867454')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-4.97544756679')
(0.0, '-9.88606775176')
(0.0, '-10.9123345853')
(0.0, '-7.9554473079')
(0.0, '-11.5132054258')
(0.0, '-10.9583204005')
(0.0, '-5.65377646397')
(0.0, '-6.99650749616')
(0.0, '-7.67250471941')
(0.0, '-4.96228378995')
(0.0, '-inf')
(74.0, '-4.38354917914')
(0.0, '-9.17594965434')
(31.0, '-11.5132054258')
(2.0, '-6.06008010118')
(10.0, '-5.14522498566')
(0.0, '-8.17072986075')
(0.0, '-7.97409263308')
(19.0, '-6.37732509786')
(0.0, '-10.3880292757')
(0.0, '-11.5132054258')
(7.0, '-5.9214056837')
(18.0, '-4.95396698069')
(2.0, '-9.0439572764')
(0.0, '-6.69647313446')
(1.0, '-3.01977039753')
(8.0, '-7.60626019164')
(0.0, '-11.5132054258')
(38.0, '-5.84993556646')
(0.0, '-5.39696398587')
(1.0, '-4.98456020858')
(0.0, '-9.29340248752')
(0.0, '-11.5132054258')
(5.0, '-8.84936260231')
(25.0, '-7.21843617992')
(3.0, '-6.52068282714')
(6.0, '-4.08270630633')
(0.0, '-2.60765110633')
(0.0, '-inf')
(4.0, '-7.12489627992')
(0.0, '-11.5132054258')
(6.0, '-11.5132054258')
(2.0, '-11.5132054258')
(5.0, '-4.68159943114')
(2.0, '-11.5132054258')
(0.0, '-11.5132054258')
(3.0, '-11.5132054258')
(1.0, '-6.37398990777')
(0.0, '-11.5132054258')
(4.0, '-11.5132054258')
(8.0, '-11.5132054258')
(1.0, '-11.5132054258')
(0.0, '-6.89858110547')
(2.0, '-7.22838551653')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(50.0, '-11.5132054258')
(5.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-7.59653125796')
(5.0, '-11.5132054258')
(7.0, '-11.5132054258')
(0.0, '-5.46621341593')
(13.0, '-10.920802199')
(1.0, '-11.5132054258')
(1.0, '-9.55695954104')
(4.0, '-inf')
(0.0, '-3.47950085029')
(0.0, '-2.59921166581')
(4.0, '-4.46271985283')
(0.0, '-4.2157390844')
(0.0, '-4.3374059866')
(0.0, '-6.04527100244')
(0.0, '-6.25739071953')
(0.0, '-5.68712318598')
(0.0, '-11.2820183627')
(0.0, '-11.5132054258')
(0.0, '-5.12730796604')
(48.0, '-2.31998741225')
(0.0, '-2.68048792411')
(0.0, '-4.00287341738')
(0.0, '-5.70978611649')
(3.0, '-4.40780064215')
(0.0, '-8.67773038354')
(2.0, '-3.12912039915')
(1.0, '-5.96690234975')
(0.0, '-4.18530692626')
(0.0, '-7.63495600027')
(0.0, '-4.92679446583')
(0.0, '-7.6476523097')
(1.0, '-6.452617859')
(0.0, '-8.49767559681')
(0.0, '-2.88185449158')
(1.0, '-4.04291063982')
(2.0, '-inf')
(1.0, '-7.1708249602')
(0.0, '-11.5132054258')
(1.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-9.30385263476')
(0.0, '-11.5132054258')
(0.0, '-10.2018890384')
(0.0, '-11.5132054258')
(0.0, '-5.6396537467')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(13.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-9.83275182584')
(0.0, '-8.52306738631')
(6.0, '-11.5132054258')
(0.0, '-11.5132054258')
(1.0, '-10.7230549788')
(0.0, '-11.5132054258')
(0.0, '-9.00149772412')
(0.0, '-7.79001175714')
(0.0, '-11.5132054258')
(2.0, '-10.9583204005')
(6.0, '-11.5132054258')
(0.0, '-10.920802199')
(0.0, '-2.50113849842')
(37.0, '-10.5414585229')
(0.0, '-inf')
(48.0, '-2.71536246581')
(0.0, '-5.99167268109')
(86.0, '-5.18656252459')
(0.0, '-0.495729093219')
(0.0, '-1.12038713267')
(0.0, '-0.994527767257')
(0.0, '-1.01429850193')
(0.0, '-2.28220508015')
(5.0, '-2.59613847926')
(0.0, '-11.5132054258')
(0.0, '-1.26255692641')
(33.0, '-2.02810037267')
(0.0, '-1.97450526847')
(0.0, '-1.47389552067')
(1.0, '-1.89917083238')
(78.0, '-2.88632063256')
(0.0, '-8.67773038354')
(63.0, '-1.36778040786')
(1.0, '-1.0437204744')
(5.0, '-1.28583416706')
(7.0, '-2.47283493266')
(0.0, '-7.48503308425')
(5.0, '-2.31551364244')
(8.0, '-2.50761343827')
(1.0, '-0.409929999515')
(3.0, '-4.36122915468')
(9.0, '-inf')
(0.0, '0.0')
(4.0, '-7.05710632865')
(0.0, '-7.86485768222')
(5.0, '-6.83273347948')
(0.0, '-3.76718135433')
(1.0, '-4.20074898472')
(1.0, '-4.79068535728')
(0.0, '-4.10508593941')
(0.0, '-5.5906896873')
(0.0, '-7.18027140201')
(0.0, '-5.55708541686')
(0.0, '-4.05276321882')
(29.0, '-4.92168861598')
(0.0, '-4.25113121697')
(0.0, '-4.46990881326')
(0.0, '-6.02570443289')
(11.0, '-5.4219225002')
(1.0, '-6.78343596161')
(14.0, '-3.42989812302')
(3.0, '-3.66247403461')
(0.0, '-4.34531774794')
(0.0, '-5.38087317529')
(0.0, '-8.07124896748')
(5.0, '-5.12816433995')
(0.0, '-4.73233387239')
(0.0, '-3.27552866777')
(0.0, '-11.5132054258')
(1.0, '-inf')
(1.0, '-inf')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 59, in simpledecode
    new_permutation = genpermutation(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 100, in genpermutation
    return riffleshuffle.shuffle(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 86, in shuffle
    seed=seed,
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 26, in get_random_number_for_right_deck
    return random.randint(low=1, high=n, )
TypeError: randint() got an unexpected keyword argument 'low'

[2019-04-30 15:54:21.760487] !!! ERROR !!!
[2019-04-30 15:54:21.760694] /Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py:119: RuntimeWarning: invalid value encountered in double_scalars
  value += permutedmatrix[i, j]*float(logtransitions[i, j])
(2.0, '-7.5919402566')
(4.0, '-2.89299972564')
(0.0, '-2.17549894848')
(0.0, '-3.49855063777')
(0.0, '-2.99697268914')
(2.0, '-2.54987966582')
(1.0, '-2.82267338196')
(9.0, '-1.66122010897')
(0.0, '-4.22674478948')
(2.0, '-1.84785152411')
(5.0, '-5.35003031721')
(4.0, '-2.65528917611')
(0.0, '-2.01913907735')
(1.0, '-4.16613992104')
(0.0, '-5.35959565483')
(0.0, '-2.12351786785')
(0.0, '-11.5132054258')
(13.0, '-2.90719212185')
(2.0, '-3.03105539393')
(17.0, '-3.43618300626')
(3.0, '-3.79286356433')
(8.0, '-2.95199278812')
(0.0, '-1.479117694')
(0.0, '-2.62686131448')
(0.0, '-5.39406784076')
(8.0, '-0.961980418094')
(30.0, '-2.16234486641')
(3.0, '-inf')
(0.0, '-3.82959090217')
(1.0, '-5.27966213456')
(1.0, '-9.64788504834')
(1.0, '-7.15190271838')
(0.0, '-6.97328184811')
(3.0, '-8.77578054841')
(4.0, '-6.73087058268')
(1.0, '-6.30691581091')
(0.0, '-5.00675793546')
(1.0, '-11.5132054258')
(0.0, '-6.91489850832')
(20.0, '-7.15825148417')
(3.0, '-4.23871184928')
(0.0, '-7.69657664896')
(4.0, '-4.85260197102')
(0.0, '-6.46864686715')
(0.0, '-11.5132054258')
(7.0, '-6.26151812028')
(1.0, '-6.55270919181')
(6.0, '-8.0771146701')
(0.0, '-4.13872450468')
(0.0, '-11.5132054258')
(1.0, '-4.97532776819')
(0.0, '-8.2901344836')
(5.0, '-5.40479684522')
(10.0, '-11.5132054258')
(12.0, '-3.06735387503')
(0.0, '-inf')
(2.0, '-3.56702897836')
(0.0, '-10.30777465')
(2.0, '-3.87961079364')
(0.0, '-8.35569785302')
(0.0, '-3.94524374563')
(13.0, '-7.53970576056')
(17.0, '-8.2097358512')
(6.0, '-9.78781466803')
(0.0, '-3.231729152')
(0.0, '-11.5132054258')
(0.0, '-7.43598592516')
(8.0, '-6.63362915467')
(0.0, '-8.99151264824')
(2.0, '-3.29256686501')
(3.0, '-4.78702437241')
(0.0, '-10.3292442468')
(0.0, '-11.5132054258')
(9.0, '-4.64902399434')
(0.0, '-4.57840814989')
(18.0, '-5.88272890227')
(7.0, '-2.91900861194')
(20.0, '-11.5132054258')
(6.0, '-7.18358043068')
(1.0, '-1.74662417916')
(4.0, '-7.36624730814')
(30.0, '-7.67250471941')
(16.0, '-3.29272437077')
(0.0, '-inf')
(0.0, '-2.84036445659')
(1.0, '-7.37067064535')
(1.0, '-9.64788504834')
(1.0, '-4.58187051178')
(0.0, '-2.53972923912')
(1.0, '-7.66840559155')
(0.0, '-7.62352379864')
(12.0, '-8.27391260229')
(0.0, '-3.18773797625')
(0.0, '-11.5132054258')
(0.0, '-8.2470935327')
(1.0, '-2.39290707224')
(0.0, '-8.36633207636')
(0.0, '-1.76705488353')
(5.0, '-4.04814316387')
(3.0, '-9.20372777019')
(0.0, '-11.5132054258')
(0.0, '-3.57240865278')
(1.0, '-7.46872280512')
(3.0, '-9.57132188249')
(10.0, '-4.19238317033')
(1.0, '-11.5132054258')
(3.0, '-6.45373367454')
(0.0, '-8.94422197667')
(0.0, '-6.01477964852')
(19.0, '-11.5132054258')
(4.0, '-3.49348104946')
(0.0, '-inf')
(0.0, '-8.78997490797')
(0.0, '-0.882509566508')
(0.0, '-1.76131449774')
(0.0, '-2.22960891845')
(0.0, '-3.46018806439')
(28.0, '-2.37922386255')
(0.0, '-2.10069898064')
(1.0, '-0.839311107189')
(0.0, '-3.26779725243')
(0.0, '-1.27989497926')
(0.0, '-1.13753942436')
(9.0, '-1.83647729421')
(0.0, '-1.454008019')
(0.0, '-2.39342334731')
(1.0, '-5.95403175414')
(6.0, '-1.57546952174')
(0.0, '-11.5132054258')
(0.0, '-1.50699261685')
(0.0, '-2.17677837566')
(1.0, '-2.48320288479')
(4.0, '-3.77180189496')
(0.0, '-0.265394692612')
(0.0, '-1.94221903146')
(0.0, '-2.51652770293')
(0.0, '-3.19682290053')
(9.0, '-1.08349169964')
(0.0, '-3.78781470887')
(0.0, '-inf')
(4.0, '-4.65689574704')
(0.0, '-10.30777465')
(0.0, '-11.5132054258')
(0.0, '-6.43410193012')
(3.0, '-4.66179344914')
(7.0, '-3.1897809951')
(0.0, '-8.27847589109')
(54.0, '-7.47604878147')
(3.0, '-3.79727990403')
(0.0, '-11.5132054258')
(0.0, '-4.35731804811')
(0.0, '-3.57664869842')
(1.0, '-5.37865728387')
(4.0, '-5.11596665456')
(3.0, '-2.38981270806')
(7.0, '-8.83192738444')
(0.0, '-11.5132054258')
(0.0, '-4.78591438842')
(1.0, '-5.85082063379')
(39.0, '-6.37823212552')
(61.0, '-5.45333937896')
(0.0, '-11.5132054258')
(1.0, '-5.19275722519')
(0.0, '-5.09047806991')
(0.0, '-6.58879923466')
(25.0, '-11.5132054258')
(66.0, '-3.36765797989')
(0.0, '-inf')
(14.0, '-3.93577855887')
(1.0, '-11.5132054258')
(2.0, '-11.5132054258')
(0.0, '-5.19830553926')
(0.0, '-5.18217339449')
(0.0, '-9.0766090887')
(0.0, '-4.30854799536')
(6.0, '-9.30759934491')
(0.0, '-3.59320797572')
(4.0, '-11.5132054258')
(0.0, '-7.14187790227')
(18.0, '-6.87080683331')
(0.0, '-10.6924640728')
(5.0, '-2.02862304248')
(2.0, '-5.77145398328')
(2.0, '-9.32317127705')
(1.0, '-11.5132054258')
(0.0, '-5.05239734996')
(8.0, '-6.82117883443')
(0.0, '-9.73111966332')
(0.0, '-2.90923834796')
(3.0, '-11.5132054258')
(0.0, '-9.68991740948')
(0.0, '-8.94422197667')
(1.0, '-8.00665270178')
(3.0, '-11.5132054258')
(1.0, '-4.13012332369')
(1.0, '-inf')
(7.0, '-6.75022688896')
(9.0, '-8.06650715115')
(22.0, '-1.71959695815')
(5.0, '-6.11041032879')
(4.0, '-6.189957295')
(24.0, '-7.89910639477')
(4.0, '-1.91218414711')
(16.0, '-9.16013172124')
(6.0, '-9.22642174227')
(0.0, '-11.5132054258')
(0.0, '-5.13584056187')
(15.0, '-8.51825876226')
(3.0, '-8.54552990265')
(0.0, '-6.78786248794')
(14.0, '-5.7182650049')
(5.0, '-4.6091161412')
(0.0, '-11.5132054258')
(15.0, '-5.81302052631')
(9.0, '-2.52506765108')
(2.0, '-1.22430477848')
(14.0, '-10.2533890062')
(15.0, '-11.5132054258')
(11.0, '-1.76682853595')
(9.0, '-4.54565003228')
(25.0, '-7.24596378722')
(49.0, '-7.67250471941')
(8.0, '-2.48395061378')
(0.0, '-inf')
(0.0, '-3.12679174821')
(0.0, '-3.79957521101')
(0.0, '-3.18632826309')
(0.0, '-2.76811528722')
(1.0, '-4.38935299347')
(0.0, '-2.61263706863')
(0.0, '-3.09626561749')
(7.0, '-2.01597210952')
(0.0, '-8.03284304173')
(0.0, '-3.98744197124')
(0.0, '-1.91005120038')
(3.0, '-2.17893707409')
(0.0, '-2.28974796801')
(0.0, '-3.66689928101')
(0.0, '-4.62334380975')
(0.0, '-2.91350583317')
(0.0, '-11.5132054258')
(0.0, '-2.67805634633')
(0.0, '-2.86186205353')
(2.0, '-2.78063397964')
(0.0, '-3.50375307563')
(0.0, '-2.03622566667')
(1.0, '-1.76081454676')
(0.0, '-2.26457772454')
(1.0, '-4.2325422565')
(54.0, '-2.71046033344')
(0.0, '-2.5795346965')
(0.0, '-inf')
(0.0, '-9.58568213183')
(0.0, '-4.25789028181')
(0.0, '-11.5132054258')
(0.0, '-8.25634938678')
(0.0, '-7.80391074524')
(0.0, '-11.5132054258')
(0.0, '-10.4809571611')
(0.0, '-11.0577830099')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-9.36578157314')
(12.0, '-9.14075265267')
(5.0, '-10.6924640728')
(1.0, '-6.50583096558')
(0.0, '-9.03164170155')
(3.0, '-10.7553734237')
(0.0, '-11.5132054258')
(0.0, '-9.80591877741')
(22.0, '-10.5006771541')
(0.0, '-10.7087139384')
(2.0, '-10.6967848982')
(0.0, '-11.5132054258')
(0.0, '-10.6035440459')
(0.0, '-11.5132054258')
(2.0, '-10.0702197945')
(0.0, '-11.5132054258')
(0.0, '-5.60234029183')
(3.0, '-inf')
(1.0, '-4.25471969071')
(0.0, '-11.5132054258')
(0.0, '-3.20000295608')
(0.0, '-8.09645786925')
(0.0, '-6.75475710599')
(0.0, '-10.9239644018')
(2.0, '-9.80511272538')
(0.0, '-10.5087141009')
(0.0, '-4.89095594718')
(0.0, '-11.5132054258')
(2.0, '-8.73280095135')
(9.0, '-4.55204225022')
(0.0, '-11.0208950451')
(0.0, '-4.46342311441')
(2.0, '-4.28347156518')
(3.0, '-8.25741152904')
(0.0, '-11.5132054258')
(0.0, '-5.00956963597')
(0.0, '-5.38479155485')
(4.0, '-11.3259572194')
(0.0, '-8.81276685876')
(2.0, '-11.5132054258')
(0.0, '-7.24399245529')
(0.0, '-11.5132054258')
(0.0, '-10.5513074778')
(0.0, '-11.5132054258')
(2.0, '-5.10760809198')
(0.0, '-inf')
(17.0, '-2.71984203578')
(10.0, '-2.17124714898')
(16.0, '-3.46541534658')
(7.0, '-4.54151944675')
(3.0, '-3.17281593778')
(4.0, '-4.15480838383')
(7.0, '-3.64646950752')
(16.0, '-6.76641254092')
(0.0, '-3.12019058549')
(6.0, '-11.5132054258')
(0.0, '-4.31307127145')
(17.0, '-1.95176143437')
(6.0, '-5.96774351974')
(3.0, '-4.60289891328')
(2.0, '-3.83356500211')
(28.0, '-2.32292848165')
(23.0, '-11.5132054258')
(12.0, '-4.43582009219')
(16.0, '-5.26266130747')
(21.0, '-4.10676237344')
(18.0, '-2.0864684791')
(15.0, '-11.5132054258')
(10.0, '-5.11080167696')
(5.0, '-6.71308138137')
(4.0, '-5.7643752364')
(11.0, '-3.5829836508')
(56.0, '-3.71874864032')
(8.0, '-inf')
(0.0, '-3.59286680305')
(0.0, '-6.56237812108')
(5.0, '-10.9367522225')
(2.0, '-5.28730860548')
(0.0, '-3.87789310862')
(1.0, '-9.62336110606')
(2.0, '-6.24800567529')
(2.0, '-6.30375858074')
(0.0, '-3.12479512225')
(0.0, '-11.5132054258')
(0.0, '-7.08012356327')
(3.0, '-5.25659687798')
(1.0, '-3.88582248682')
(0.0, '-7.65776738629')
(0.0, '-2.88062092856')
(3.0, '-7.72723266391')
(0.0, '-11.5132054258')
(0.0, '-4.39598730942')
(0.0, '-5.17220047257')
(1.0, '-6.633761839')
(3.0, '-4.03934181576')
(0.0, '-11.5132054258')
(0.0, '-8.66144192376')
(0.0, '-11.5132054258')
(0.0, '-5.23036784426')
(40.0, '-11.5132054258')
(6.0, '-2.87183970073')
(0.0, '-inf')
(0.0, '-1.5975433612')
(0.0, '-9.29577647841')
(2.0, '-10.0976290617')
(0.0, '-5.29299070114')
(0.0, '-2.48703930131')
(2.0, '-9.31307424242')
(0.0, '-4.27033786088')
(3.0, '-6.74413258115')
(0.0, '-1.30872169965')
(0.0, '-11.5132054258')
(0.0, '-1.9282572646')
(17.0, '-5.96390970427')
(0.0, '-6.13499088039')
(0.0, '-4.11011270691')
(1.0, '-1.97548635328')
(0.0, '-9.32317127705')
(0.0, '-11.5132054258')
(5.0, '-3.9692182373')
(0.0, '-6.4063170636')
(1.0, '-6.633761839')
(4.0, '-2.2872342528')
(0.0, '-10.4910077278')
(1.0, '-3.21165012987')
(0.0, '-11.5132054258')
(0.0, '-6.66823653894')
(6.0, '-11.5132054258')
(5.0, '-3.65300599621')
(0.0, '-inf')
(0.0, '-7.74130781709')
(0.0, '-2.4544006188')
(2.0, '-1.5259270009')
(0.0, '-2.8636572487')
(3.0, '-6.3114634967')
(0.0, '-1.72513090831')
(1.0, '-2.60330913862')
(25.0, '-2.54020149663')
(0.0, '-3.04986692214')
(0.0, '-1.41944643007')
(0.0, '-6.53859359518')
(10.0, '-2.56678132657')
(3.0, '-2.36204867147')
(0.0, '-2.46997964899')
(3.0, '-3.19799031533')
(22.0, '-2.08049203337')
(0.0, '-11.5132054258')
(2.0, '-2.69702258049')
(2.0, '-2.86575202887')
(60.0, '-2.17999293279')
(7.0, '-6.90077578593')
(5.0, '-3.22161333306')
(0.0, '-2.31206416029')
(14.0, '-4.87947839942')
(8.0, '-1.81889862193')
(14.0, '-4.47446384666')
(24.0, '-2.84344269748')
(0.0, '-inf')
(4.0, '-4.03028637815')
(0.0, '-11.5132054258')
(3.0, '-10.5734208982')
(4.0, '-9.02403233067')
(1.0, '-4.715614666')
(1.0, '-7.83625311708')
(8.0, '-7.50186005103')
(37.0, '-9.78781466803')
(0.0, '-5.34139107724')
(0.0, '-11.5132054258')
(0.0, '-8.2470935327')
(16.0, '-5.94076298238')
(9.0, '-3.20554548479')
(2.0, '-7.36722353135')
(7.0, '-4.12415063387')
(1.0, '-2.47033798006')
(1.0, '-11.5132054258')
(3.0, '-5.4215193882')
(2.0, '-3.86352593516')
(7.0, '-8.86142225275')
(0.0, '-3.14682128197')
(11.0, '-11.5132054258')
(5.0, '-8.6195038571')
(3.0, '-1.33956701185')
(5.0, '-7.22355065103')
(7.0, '-11.5132054258')
(12.0, '-3.67030620993')
(0.0, '-inf')
(2.0, '-10.8695339161')
(0.0, '-11.5132054258')
(12.0, '-5.16177751195')
(0.0, '-10.2731381544')
(0.0, '-6.27389760818')
(0.0, '-10.9239644018')
(3.0, '-10.8694138243')
(0.0, '-10.6203477926')
(0.0, '-8.8738091013')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(9.0, '-10.8577273401')
(0.0, '-11.5132054258')
(0.0, '-6.48373595074')
(0.0, '-9.11284138397')
(0.0, '-10.7553734237')
(0.0, '-11.5132054258')
(0.0, '-8.18878301826')
(0.0, '-7.53209409')
(0.0, '-10.9123345853')
(0.0, '-10.0886600678')
(2.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-4.86375059347')
(0.0, '-10.5513074778')
(0.0, '-11.5132054258')
(7.0, '-6.01012485274')
(0.0, '-inf')
(4.0, '-2.38051879737')
(3.0, '-2.97197330777')
(23.0, '-3.19390221715')
(0.0, '-4.20773228978')
(6.0, '-1.86490774321')
(0.0, '-2.68147173619')
(3.0, '-2.69527973367')
(6.0, '-4.95906093481')
(20.0, '-3.28036839183')
(5.0, '-11.5132054258')
(2.0, '-8.1552579722')
(7.0, '-6.2005820782')
(2.0, '-2.82092880856')
(2.0, '-6.24421730047')
(3.0, '-2.22073073568')
(2.0, '-1.95605398678')
(7.0, '-11.5132054258')
(2.0, '-3.83734716464')
(4.0, '-7.57100440487')
(1.0, '-3.77041006685')
(0.0, '-1.8727084908')
(0.0, '-6.90164984801')
(28.0, '-4.56748477583')
(0.0, '-11.5132054258')
(79.0, '-7.26889081195')
(63.0, '-11.5132054258')
(0.0, '-3.97499294832')
(0.0, '-inf')
(2.0, '-2.19948541446')
(1.0, '-4.01428701292')
(4.0, '-7.04996012532')
(0.0, '-3.79700512141')
(0.0, '-2.86441989376')
(51.0, '-7.27587688818')
(11.0, '-3.80205826632')
(9.0, '-6.33904878404')
(0.0, '-2.14015840442')
(1.0, '-11.5132054258')
(3.0, '-3.38935238802')
(31.0, '-4.37951021267')
(2.0, '-3.85052368889')
(0.0, '-3.39175648209')
(4.0, '-3.69360565506')
(8.0, '-3.92217908512')
(0.0, '-11.5132054258')
(4.0, '-2.862128354')
(3.0, '-2.919803798')
(39.0, '-4.15768807062')
(17.0, '-2.14816893885')
(7.0, '-11.5132054258')
(1.0, '-4.7977324232')
(0.0, '-5.46621341593')
(0.0, '-3.20815111745')
(24.0, '-11.5132054258')
(18.0, '-2.598197822')
(0.0, '-inf')
(29.0, '-2.04149669552')
(3.0, '-4.55141021635')
(18.0, '-2.45390460808')
(15.0, '-7.04781919293')
(8.0, '-3.56567705281')
(28.0, '-3.37740683541')
(0.0, '-5.63027489558')
(3.0, '-3.46956987932')
(13.0, '-1.99382778433')
(1.0, '-11.5132054258')
(0.0, '-7.7915011818')
(21.0, '-4.06352702944')
(23.0, '-7.33505176506')
(9.0, '-2.42476752394')
(43.0, '-2.80370387039')
(3.0, '-3.32757990809')
(0.0, '-11.5132054258')
(88.0, '-3.11743181298')
(27.0, '-2.19732984675')
(12.0, '-3.67317564171')
(11.0, '-2.02658152268')
(11.0, '-11.5132054258')
(24.0, '-7.58734602535')
(16.0, '-1.84379618')
(23.0, '-4.42468373032')
(25.0, '-6.99015489402')
(0.0, '-2.01032762014')
(0.0, '-inf')
(5.0, '-4.49319193662')
(2.0, '-2.04508195957')
(9.0, '-3.4415154168')
(10.0, '-4.62517009204')
(0.0, '-7.37727548205')
(7.0, '-3.36688471976')
(0.0, '-4.01903874158')
(3.0, '-4.82473231233')
(18.0, '-7.60322755593')
(2.0, '-1.20436207078')
(0.0, '-8.34822362171')
(22.0, '-4.26317129301')
(1.0, '-3.00841990157')
(3.0, '-5.45279994051')
(17.0, '-1.8934406283')
(2.0, '-3.53809911604')
(0.0, '-0.00171445351453')
(30.0, '-4.39769720301')
(9.0, '-3.25044846631')
(4.0, '-4.17066863273')
(0.0, '-10.4507106729')
(5.0, '-6.80082919853')
(14.0, '-8.46739812993')
(2.0, '-4.59212519403')
(24.0, '-10.0702197945')
(51.0, '-5.61203575185')
(10.0, '-4.57599074729')
(0.0, '-inf')
(4.0, '-3.43151484758')
(4.0, '-8.53230387264')
(6.0, '-11.5132054258')
(0.0, '-5.83079990504')
(0.0, '-3.92414030055')
(1.0, '-10.5556808156')
(0.0, '-11.5132054258')
(23.0, '-10.8898055156')
(0.0, '-3.97007580976')
(9.0, '-11.5132054258')
(3.0, '-10.2544820654')
(32.0, '-5.38630971374')
(3.0, '-10.2478457284')
(6.0, '-5.41630151426')
(8.0, '-4.2648867454')
(2.0, '-11.5132054258')
(1.0, '-11.5132054258')
(1.0, '-4.97544756679')
(4.0, '-9.88606775176')
(4.0, '-10.9123345853')
(5.0, '-7.9554473079')
(4.0, '-11.5132054258')
(1.0, '-10.9583204005')
(0.0, '-5.65377646397')
(2.0, '-6.99650749616')
(25.0, '-7.67250471941')
(4.0, '-4.96228378995')
(0.0, '-inf')
(3.0, '-4.38354917914')
(5.0, '-9.17594965434')
(0.0, '-11.5132054258')
(2.0, '-6.06008010118')
(5.0, '-5.14522498566')
(8.0, '-8.17072986075')
(0.0, '-7.97409263308')
(8.0, '-6.37732509786')
(0.0, '-10.3880292757')
(0.0, '-11.5132054258')
(0.0, '-5.9214056837')
(11.0, '-4.95396698069')
(0.0, '-9.0439572764')
(2.0, '-6.69647313446')
(18.0, '-3.01977039753')
(22.0, '-7.60626019164')
(0.0, '-11.5132054258')
(0.0, '-5.84993556646')
(2.0, '-5.39696398587')
(29.0, '-4.98456020858')
(34.0, '-9.29340248752')
(1.0, '-11.5132054258')
(17.0, '-8.84936260231')
(2.0, '-7.21843617992')
(4.0, '-6.52068282714')
(58.0, '-4.08270630633')
(20.0, '-2.60765110633')
(0.0, '-inf')
(0.0, '-7.12489627992')
(0.0, '-11.5132054258')
(1.0, '-11.5132054258')
(7.0, '-11.5132054258')
(0.0, '-4.68159943114')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(5.0, '-11.5132054258')
(0.0, '-6.37398990777')
(0.0, '-11.5132054258')
(3.0, '-11.5132054258')
(1.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-6.89858110547')
(0.0, '-7.22838551653')
(2.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(0.0, '-11.5132054258')
(4.0, '-11.5132054258')
(1.0, '-7.59653125796')
(1.0, '-11.5132054258')
(8.0, '-11.5132054258')
(2.0, '-5.46621341593')
(0.0, '-10.920802199')
(29.0, '-11.5132054258')
(7.0, '-9.55695954104')
(0.0, '-inf')
(0.0, '-3.47950085029')
(1.0, '-2.59921166581')
(8.0, '-4.46271985283')
(0.0, '-4.2157390844')
(0.0, '-4.3374059866')
(25.0, '-6.04527100244')
(3.0, '-6.25739071953')
(16.0, '-5.68712318598')
(0.0, '-11.2820183627')
(0.0, '-11.5132054258')
(0.0, '-5.12730796604')
(6.0, '-2.31998741225')
(0.0, '-2.68048792411')
(0.0, '-4.00287341738')
(11.0, '-5.70978611649')
(11.0, '-4.40780064215')
(0.0, '-8.67773038354')
(7.0, '-3.12912039915')
(0.0, '-5.96690234975')
(11.0, '-4.18530692626')
(26.0, '-7.63495600027')
(9.0, '-4.92679446583')
(29.0, '-7.6476523097')
(2.0, '-6.452617859')
(4.0, '-8.49767559681')
(88.0, '-2.88185449158')
(45.0, '-4.04291063982')
(0.0, '-inf')
(1.0, '-7.1708249602')
(31.0, '-11.5132054258')
(1.0, '-11.5132054258')
(5.0, '-11.5132054258')
(20.0, '-9.30385263476')
(58.0, '-11.5132054258')
(0.0, '-10.2018890384')
(21.0, '-11.5132054258')
(3.0, '-5.6396537467')
(1.0, '-11.5132054258')
(0.0, '-11.5132054258')
(22.0, '-11.5132054258')
(0.0, '-11.5132054258')
(5.0, '-9.83275182584')
(36.0, '-8.52306738631')
(8.0, '-11.5132054258')
(0.0, '-11.5132054258')
(23.0, '-10.7230549788')
(106.0, '-11.5132054258')
(139.0, '-9.00149772412')
(13.0, '-7.79001175714')
(23.0, '-11.5132054258')
(71.0, '-10.9583204005')
(2.0, '-11.5132054258')
(85.0, '-10.920802199')
(0.0, '-2.50113849842')
(24.0, '-10.5414585229')
(38.0, '-inf')
(12.0, '-2.71536246581')
(3.0, '-5.99167268109')
(17.0, '-5.18656252459')
(5.0, '-0.495729093219')
(4.0, '-1.12038713267')
(13.0, '-0.994527767257')
(4.0, '-1.01429850193')
(2.0, '-2.28220508015')
(6.0, '-2.59613847926')
(18.0, '-11.5132054258')
(9.0, '-1.26255692641')
(12.0, '-2.02810037267')
(8.0, '-1.97450526847')
(2.0, '-1.47389552067')
(14.0, '-1.89917083238')
(6.0, '-2.88632063256')
(2.0, '-8.67773038354')
(50.0, '-1.36778040786')
(17.0, '-1.0437204744')
(19.0, '-1.28583416706')
(10.0, '-2.47283493266')
(8.0, '-7.48503308425')
(16.0, '-2.31551364244')
(12.0, '-2.50761343827')
(21.0, '-0.409929999515')
(88.0, '-4.36122915468')
(2.0, '-inf')
(3.0, '0.0')
(1.0, '-7.05710632865')
(2.0, '-7.86485768222')
(9.0, '-6.83273347948')
(2.0, '-3.76718135433')
(1.0, '-4.20074898472')
(2.0, '-4.79068535728')
(2.0, '-4.10508593941')
(0.0, '-5.5906896873')
(0.0, '-7.18027140201')
(0.0, '-5.55708541686')
(0.0, '-4.05276321882')
(5.0, '-4.92168861598')
(0.0, '-4.25113121697')
(0.0, '-4.46990881326')
(4.0, '-6.02570443289')
(0.0, '-5.4219225002')
(0.0, '-6.78343596161')
(1.0, '-3.42989812302')
(4.0, '-3.66247403461')
(10.0, '-4.34531774794')
(0.0, '-5.38087317529')
(1.0, '-8.07124896748')
(3.0, '-5.12816433995')
(1.0, '-4.73233387239')
(5.0, '-3.27552866777')
(0.0, '-11.5132054258')
(4.0, '-inf')
(0.0, '-inf')
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 59, in simpledecode
    new_permutation = genpermutation(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 100, in genpermutation
    return riffleshuffle.shuffle(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 86, in shuffle
    seed=seed,
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 26, in get_random_number_for_right_deck
    return random.randint(low=1, high=n, )
TypeError: randint() got an unexpected keyword argument 'low'

[2019-04-30 15:55:10.171651] !!! ERROR !!!
[2019-04-30 15:55:10.171922] /Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py:118: RuntimeWarning: invalid value encountered in double_scalars
  value += permutedmatrix[i, j]*float(logtransitions[i, j])
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 59, in simpledecode
    new_permutation = genpermutation(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 100, in genpermutation
    return riffleshuffle.shuffle(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 97, in shuffle
    seed=seed,
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 53, in should_drop_from_right_deck
    random = sklearn.utils.check_random_state(seed=seed, )
NameError: global name 'sklearn' is not defined

[2019-04-30 15:55:10.533421] !!! ERROR !!!
[2019-04-30 15:55:10.533655] /Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py:118: RuntimeWarning: invalid value encountered in double_scalars
  value += permutedmatrix[i, j]*float(logtransitions[i, j])
Traceback (most recent call last):
  File "./decode", line 14, in <module>
    main()
  File "./decode", line 11, in main
    print decode(sys.argv[1], has_breakpoint)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 30, in decode
    permutation = simpledecode(niters, nstop, textvector, transitions, letterp)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 59, in simpledecode
    new_permutation = genpermutation(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/decode.py", line 100, in genpermutation
    return riffleshuffle.shuffle(permutation)
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 97, in shuffle
    seed=seed,
  File "/Users/thiagobergamaschi/Documents/MIT/6/6.437/part_2/riffleshuffle.py", line 53, in should_drop_from_right_deck
    random = sklearn.utils.check_random_state(seed=seed, )
NameError: global name 'sklearn' is not defined

[2019-04-30 15:55:38.054579] !!! ERROR !!!
[2019-04-30 15:55:38.055181] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-30 15:58:13.067342] !!! ERROR !!!
[2019-04-30 15:58:13.067903] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

[2019-04-30 16:00:34.192495] !!! ERROR !!!
[2019-04-30 16:00:34.193340] Traceback (most recent call last):
  File "test.py", line 76, in main
    (elapsed_time1, score1, max_score1, output) = test(executable, plaintext, ciphertext, False)
  File "test.py", line 57, in test
    score = compare(plaintext, output)
  File "test.py", line 29, in compare
    raise ComparisonError("strings to compare must have the same length")
ComparisonError: strings to compare must have the same length

